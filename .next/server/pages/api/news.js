"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/news";
exports.ids = ["pages/api/news"];
exports.modules = {

/***/ "mysql2/promise":
/*!*********************************!*\
  !*** external "mysql2/promise" ***!
  \*********************************/
/***/ ((module) => {

module.exports = require("mysql2/promise");

/***/ }),

/***/ "next-auth/react":
/*!**********************************!*\
  !*** external "next-auth/react" ***!
  \**********************************/
/***/ ((module) => {

module.exports = require("next-auth/react");

/***/ }),

/***/ "next/dist/compiled/next-server/pages-api.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/pages-api.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/pages-api.runtime.dev.js");

/***/ }),

/***/ "(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fnews&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Cnews%5Cindex.ts&middlewareConfigBase64=e30%3D!":
/*!**********************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fnews&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Cnews%5Cindex.ts&middlewareConfigBase64=e30%3D! ***!
  \**********************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   routeModule: () => (/* binding */ routeModule)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/pages-api/module.compiled */ \"(api)/./node_modules/next/dist/server/future/route-modules/pages-api/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(api)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/build/templates/helpers */ \"(api)/./node_modules/next/dist/build/templates/helpers.js\");\n/* harmony import */ var _pages_api_news_index_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./pages\\api\\news\\index.ts */ \"(api)/./pages/api/news/index.ts\");\n\n\n\n// Import the userland code.\n\n// Re-export the handler (should be the default export).\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_news_index_ts__WEBPACK_IMPORTED_MODULE_3__, \"default\"));\n// Re-export config.\nconst config = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_news_index_ts__WEBPACK_IMPORTED_MODULE_3__, \"config\");\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__.PagesAPIRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.PAGES_API,\n        page: \"/api/news\",\n        pathname: \"/api/news\",\n        // The following aren't used in production.\n        bundlePath: \"\",\n        filename: \"\"\n    },\n    userland: _pages_api_news_index_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n\n//# sourceMappingURL=pages-api.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LXJvdXRlLWxvYWRlci9pbmRleC5qcz9raW5kPVBBR0VTX0FQSSZwYWdlPSUyRmFwaSUyRm5ld3MmcHJlZmVycmVkUmVnaW9uPSZhYnNvbHV0ZVBhZ2VQYXRoPS4lMkZwYWdlcyU1Q2FwaSU1Q25ld3MlNUNpbmRleC50cyZtaWRkbGV3YXJlQ29uZmlnQmFzZTY0PWUzMCUzRCEiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBc0c7QUFDdkM7QUFDTDtBQUMxRDtBQUN5RDtBQUN6RDtBQUNBLGlFQUFlLHdFQUFLLENBQUMscURBQVEsWUFBWSxFQUFDO0FBQzFDO0FBQ08sZUFBZSx3RUFBSyxDQUFDLHFEQUFRO0FBQ3BDO0FBQ08sd0JBQXdCLGdIQUFtQjtBQUNsRDtBQUNBLGNBQWMseUVBQVM7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxZQUFZO0FBQ1osQ0FBQzs7QUFFRCIsInNvdXJjZXMiOlsid2VicGFjazovL2pvcm5hbGsxLz84NDU5Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFBhZ2VzQVBJUm91dGVNb2R1bGUgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUtbW9kdWxlcy9wYWdlcy1hcGkvbW9kdWxlLmNvbXBpbGVkXCI7XG5pbXBvcnQgeyBSb3V0ZUtpbmQgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUta2luZFwiO1xuaW1wb3J0IHsgaG9pc3QgfSBmcm9tIFwibmV4dC9kaXN0L2J1aWxkL3RlbXBsYXRlcy9oZWxwZXJzXCI7XG4vLyBJbXBvcnQgdGhlIHVzZXJsYW5kIGNvZGUuXG5pbXBvcnQgKiBhcyB1c2VybGFuZCBmcm9tIFwiLi9wYWdlc1xcXFxhcGlcXFxcbmV3c1xcXFxpbmRleC50c1wiO1xuLy8gUmUtZXhwb3J0IHRoZSBoYW5kbGVyIChzaG91bGQgYmUgdGhlIGRlZmF1bHQgZXhwb3J0KS5cbmV4cG9ydCBkZWZhdWx0IGhvaXN0KHVzZXJsYW5kLCBcImRlZmF1bHRcIik7XG4vLyBSZS1leHBvcnQgY29uZmlnLlxuZXhwb3J0IGNvbnN0IGNvbmZpZyA9IGhvaXN0KHVzZXJsYW5kLCBcImNvbmZpZ1wiKTtcbi8vIENyZWF0ZSBhbmQgZXhwb3J0IHRoZSByb3V0ZSBtb2R1bGUgdGhhdCB3aWxsIGJlIGNvbnN1bWVkLlxuZXhwb3J0IGNvbnN0IHJvdXRlTW9kdWxlID0gbmV3IFBhZ2VzQVBJUm91dGVNb2R1bGUoe1xuICAgIGRlZmluaXRpb246IHtcbiAgICAgICAga2luZDogUm91dGVLaW5kLlBBR0VTX0FQSSxcbiAgICAgICAgcGFnZTogXCIvYXBpL25ld3NcIixcbiAgICAgICAgcGF0aG5hbWU6IFwiL2FwaS9uZXdzXCIsXG4gICAgICAgIC8vIFRoZSBmb2xsb3dpbmcgYXJlbid0IHVzZWQgaW4gcHJvZHVjdGlvbi5cbiAgICAgICAgYnVuZGxlUGF0aDogXCJcIixcbiAgICAgICAgZmlsZW5hbWU6IFwiXCJcbiAgICB9LFxuICAgIHVzZXJsYW5kXG59KTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cGFnZXMtYXBpLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fnews&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Cnews%5Cindex.ts&middlewareConfigBase64=e30%3D!\n");

/***/ }),

/***/ "(api)/./data/mockData.ts":
/*!**************************!*\
  !*** ./data/mockData.ts ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   categories: () => (/* binding */ categories),\n/* harmony export */   featuredNews: () => (/* binding */ featuredNews),\n/* harmony export */   latestNews: () => (/* binding */ latestNews),\n/* harmony export */   trendingArticles: () => (/* binding */ trendingArticles),\n/* harmony export */   upcomingEvents: () => (/* binding */ upcomingEvents)\n/* harmony export */ });\n// Mock data para o site JornalK1\nconst featuredNews = [\n    {\n        id: 1,\n        title: \"Nova tecnologia de dessaliniza\\xe7\\xe3o pode resolver crise h\\xeddrica em regi\\xf5es costeiras\",\n        excerpt: \"Pesquisadores desenvolveram um m\\xe9todo inovador que reduz em 50% o custo energ\\xe9tico da dessaliniza\\xe7\\xe3o, tornando o processo mais acess\\xedvel para regi\\xf5es com escassez de \\xe1gua pot\\xe1vel.\",\n        content: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla facilisi. Sed euismod, nisl vel ultricies lacinia, nisl nisl aliquam nisl, vel aliquam nisl nisl vel nisl. Nulla facilisi. Sed euismod, nisl vel ultricies lacinia, nisl nisl aliquam nisl, vel aliquam nisl nisl vel nisl.\",\n        imageUrl: \"https://images.unsplash.com/photo-1581088247940-c0e306a0bde9?q=80&w=1000\",\n        date: \"2025-05-10\",\n        author: \"Carlos Silva\",\n        category: \"Tecnologia\",\n        tags: [\n            \"\\xe1gua\",\n            \"sustentabilidade\",\n            \"inova\\xe7\\xe3o\"\n        ],\n        slug: \"nova-tecnologia-dessalinizacao-crise-hidrica\",\n        viewCount: 1250,\n        featured: true\n    }\n];\nconst latestNews = [\n    {\n        id: 2,\n        title: \"Avan\\xe7os na medicina regenerativa prometem revolucionar tratamentos para les\\xf5es na medula\",\n        excerpt: \"Nova terapia celular mostra resultados promissores em testes cl\\xednicos, com pacientes recuperando sensibilidade e movimento parcial ap\\xf3s les\\xf5es graves na medula espinhal.\",\n        content: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla facilisi. Sed euismod, nisl vel ultricies lacinia, nisl nisl aliquam nisl, vel aliquam nisl nisl vel nisl. Nulla facilisi. Sed euismod, nisl vel ultricies lacinia, nisl nisl aliquam nisl, vel aliquam nisl nisl vel nisl.\",\n        imageUrl: \"https://images.unsplash.com/photo-1579154204601-01588f351e67?q=80&w=1000\",\n        date: \"2025-05-09\",\n        author: \"Mariana Costa\",\n        category: \"Sa\\xfade\",\n        tags: [\n            \"medicina\",\n            \"pesquisa\",\n            \"sa\\xfade\"\n        ],\n        slug: \"avancos-medicina-regenerativa-lesoes-medula\",\n        viewCount: 980,\n        featured: true\n    },\n    {\n        id: 3,\n        title: \"C\\xfapula do G20 define novas metas para redu\\xe7\\xe3o de emiss\\xf5es de carbono at\\xe9 2035\",\n        excerpt: \"L\\xedderes mundiais chegaram a um acordo hist\\xf3rico para cortar emiss\\xf5es de gases de efeito estufa em 60% at\\xe9 2035, com investimentos trilion\\xe1rios em energias renov\\xe1veis.\",\n        content: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla facilisi. Sed euismod, nisl vel ultricies lacinia, nisl nisl aliquam nisl, vel aliquam nisl nisl vel nisl. Nulla facilisi. Sed euismod, nisl vel ultricies lacinia, nisl nisl aliquam nisl, vel aliquam nisl nisl vel nisl.\",\n        imageUrl: \"https://images.unsplash.com/photo-1623015683476-e8dbee94b7e9?q=80&w=1000\",\n        date: \"2025-05-08\",\n        author: \"Rafael Mendes\",\n        category: \"Pol\\xedtica\",\n        tags: [\n            \"clima\",\n            \"sustentabilidade\",\n            \"pol\\xedtica internacional\"\n        ],\n        slug: \"cupula-g20-metas-reducao-emissoes-carbono\",\n        viewCount: 1540,\n        featured: true\n    },\n    {\n        id: 6,\n        title: \"Novo sat\\xe9lite captura as primeiras imagens em alta resolu\\xe7\\xe3o do fundo do oceano\",\n        excerpt: \"Tecnologia revolucion\\xe1ria utiliza ondas gravitacionais para mapear detalhadamente o relevo submarino, revelando estruturas nunca antes observadas pelos cientistas.\",\n        imageUrl: \"https://images.unsplash.com/photo-1614728894747-a83421e2b9c9?q=80&w=1000\",\n        date: \"2025-05-05\",\n        author: \"Fernanda Lima\",\n        category: \"Ci\\xeancia\",\n        tags: [\n            \"oceanografia\",\n            \"espa\\xe7o\",\n            \"descobertas\"\n        ],\n        slug: \"satelite-imagens-fundo-oceano\",\n        viewCount: 950\n    },\n    {\n        id: 5,\n        title: \"Intelig\\xeancia artificial agora consegue prever terremotos com uma semana de anteced\\xeancia\",\n        excerpt: \"Sistema desenvolvido por cientistas do MIT analisa padr\\xf5es s\\xedsmicos impercept\\xedveis e conseguiu prever 8 dos 10 grandes terremotos em teste realizado no Anel de Fogo do Pac\\xedfico.\",\n        imageUrl: \"https://images.unsplash.com/photo-1507146153580-69a1fe6d8aa1?q=80&w=1000\",\n        date: \"2025-05-06\",\n        author: \"Pedro Nakamura\",\n        category: \"Tecnologia\",\n        tags: [\n            \"IA\",\n            \"desastres naturais\",\n            \"ci\\xeancia\"\n        ],\n        slug: \"ia-previsao-terremotos-antecedencia\",\n        viewCount: 1320\n    },\n    {\n        id: 8,\n        title: \"Sal\\xe1rio m\\xe9dio sobe pelo quinto m\\xeas consecutivo e ofertas de emprego atingem recorde hist\\xf3rico\",\n        excerpt: \"Mercado de trabalho aquecido reflete a recupera\\xe7\\xe3o econ\\xf4mica p\\xf3s-pandemia, com destaque para os setores de tecnologia, sa\\xfade e energia renov\\xe1vel.\",\n        imageUrl: \"https://images.unsplash.com/photo-1579621970563-ebec7560ff3e?q=80&w=1000\",\n        date: \"2025-05-03\",\n        author: \"Camila Ferreira\",\n        category: \"Economia\",\n        tags: [\n            \"emprego\",\n            \"sal\\xe1rios\",\n            \"economia\"\n        ],\n        slug: \"salario-medio-sobe-ofertas-emprego-recorde\",\n        viewCount: 1680\n    }\n];\nconst trendingArticles = [\n    {\n        id: 7,\n        title: \"Minist\\xe9rio da Sa\\xfade anuncia nova campanha de vacina\\xe7\\xe3o\",\n        excerpt: \"Campanha focar\\xe1 em crian\\xe7as e idosos com in\\xedcio previsto para o pr\\xf3ximo m\\xeas.\",\n        imageUrl: \"https://images.unsplash.com/photo-1579621970563-ebec7560ff3e?q=80&w=1000\",\n        date: \"2025-05-02\",\n        category: \"Sa\\xfade\",\n        slug: \"ministerio-saude-nova-campanha-vacinacao\"\n    },\n    {\n        id: 9,\n        title: \"Brasil vence Argentina em cl\\xe1ssico sul-americano\",\n        excerpt: \"Sele\\xe7\\xe3o brasileira superou rivais por 3x1 em partida v\\xe1lida pelas eliminat\\xf3rias.\",\n        imageUrl: \"https://images.unsplash.com/photo-1579621970563-ebec7560ff3e?q=80&w=1000\",\n        date: \"2025-05-01\",\n        category: \"Esportes\",\n        slug: \"brasil-vence-argentina-classico\"\n    },\n    {\n        id: 10,\n        title: \"Nova lei de prote\\xe7\\xe3o ambiental \\xe9 aprovada pelo Congresso\",\n        excerpt: \"Legisla\\xe7\\xe3o prev\\xea puni\\xe7\\xf5es mais severas para crimes ambientais e desmatamento ilegal.\",\n        imageUrl: \"/images/news/news-10.jpg\",\n        date: \"11 maio, 2023\",\n        category: \"Meio Ambiente\",\n        slug: \"nova-lei-protecao-ambiental-aprovada\"\n    }\n];\nconst categories = [\n    {\n        id: 1,\n        name: \"Pol\\xedtica\",\n        slug: \"politica\",\n        description: \"Not\\xedcias sobre pol\\xedtica nacional e internacional, elei\\xe7\\xf5es, governo e congresso.\",\n        count: 42,\n        icon: \"GavelIcon\",\n        imageUrl: \"https://images.unsplash.com/photo-1541872703-74c5e44368f9?q=80&w=1000\",\n        color: \"from-red-500 to-red-700\"\n    },\n    {\n        id: 2,\n        name: \"Economia\",\n        slug: \"economia\",\n        description: \"Informa\\xe7\\xf5es sobre mercado financeiro, neg\\xf3cios, empresas e economia global.\",\n        count: 38,\n        icon: \"TrendingUpIcon\",\n        imageUrl: \"https://images.unsplash.com/photo-1611974789855-9c2a0a7236a3?q=80&w=1000\",\n        color: \"from-green-500 to-green-700\"\n    },\n    {\n        id: 3,\n        name: \"Tecnologia\",\n        slug: \"tecnologia\",\n        description: \"As \\xfaltimas novidades em tecnologia, gadgets, apps e inova\\xe7\\xf5es.\",\n        count: 56,\n        icon: \"DevicesIcon\",\n        imageUrl: \"https://images.unsplash.com/photo-1519389950473-47ba0277781c?q=80&w=1000\",\n        color: \"from-blue-500 to-blue-700\"\n    },\n    {\n        id: 4,\n        name: \"Esportes\",\n        slug: \"esportes\",\n        description: \"Cobertura completa de futebol, v\\xf4lei, basquete e outros esportes.\",\n        count: 63,\n        icon: \"SportsSoccerIcon\",\n        imageUrl: \"https://images.unsplash.com/photo-1461896836934-ffe607ba8211?q=80&w=1000\",\n        color: \"from-orange-500 to-orange-700\"\n    }\n];\nconst upcomingEvents = [\n    {\n        id: 1,\n        title: \"Confer\\xeancia Internacional de Tecnologia\",\n        date: \"15 junho, 2023\",\n        location: \"S\\xe3o Paulo, SP\"\n    },\n    {\n        id: 2,\n        title: \"F\\xf3rum Econ\\xf4mico Nacional\",\n        date: \"22 junho, 2023\",\n        location: \"Rio de Janeiro, RJ\"\n    },\n    {\n        id: 3,\n        title: \"Campeonato Brasileiro de Surf\",\n        date: \"10-12 julho, 2023\",\n        location: \"Florian\\xf3polis, SC\"\n    }\n];\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./data/mockData.ts\n");

/***/ }),

/***/ "(api)/./pages/api/mock-mode.ts":
/*!********************************!*\
  !*** ./pages/api/mock-mode.ts ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DEBUG_MOCK: () => (/* binding */ DEBUG_MOCK),\n/* harmony export */   MOCK_MODE: () => (/* binding */ MOCK_MODE),\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\n// Configurações para habilitar o modo de dados mockados\n// Essa configuração pode ser alterada no arquivo .env.local\nconst MOCK_MODE = process.env.NEXT_PUBLIC_MOCK_MODE === \"true\" || true;\n// Flag para logs de debug do modo mock\nconst DEBUG_MOCK = process.env.NEXT_PUBLIC_DEBUG_MOCK === \"true\" || false;\nfunction handler(req, res) {\n    res.status(200).json({\n        mockMode: MOCK_MODE\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9wYWdlcy9hcGkvbW9jay1tb2RlLnRzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBLHdEQUF3RDtBQUN4RCw0REFBNEQ7QUFDckQsTUFBTUEsWUFBWUMsUUFBUUMsR0FBRyxDQUFDQyxxQkFBcUIsS0FBSyxVQUFVLEtBQUs7QUFFOUUsdUNBQXVDO0FBQ2hDLE1BQU1DLGFBQWFILFFBQVFDLEdBQUcsQ0FBQ0csc0JBQXNCLEtBQUssVUFBVSxNQUFNO0FBSWxFLFNBQVNDLFFBQVFDLEdBQW1CLEVBQUVDLEdBQW9CO0lBQ3ZFQSxJQUFJQyxNQUFNLENBQUMsS0FBS0MsSUFBSSxDQUFDO1FBQUVDLFVBQVVYO0lBQVU7QUFDN0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9qb3JuYWxrMS8uL3BhZ2VzL2FwaS9tb2NrLW1vZGUudHM/OWEyZiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBDb25maWd1cmHDp8O1ZXMgcGFyYSBoYWJpbGl0YXIgbyBtb2RvIGRlIGRhZG9zIG1vY2thZG9zXG4vLyBFc3NhIGNvbmZpZ3VyYcOnw6NvIHBvZGUgc2VyIGFsdGVyYWRhIG5vIGFycXVpdm8gLmVudi5sb2NhbFxuZXhwb3J0IGNvbnN0IE1PQ0tfTU9ERSA9IHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX01PQ0tfTU9ERSA9PT0gJ3RydWUnIHx8IHRydWU7XG5cbi8vIEZsYWcgcGFyYSBsb2dzIGRlIGRlYnVnIGRvIG1vZG8gbW9ja1xuZXhwb3J0IGNvbnN0IERFQlVHX01PQ0sgPSBwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19ERUJVR19NT0NLID09PSAndHJ1ZScgfHwgZmFsc2U7XG5cbmltcG9ydCB7IE5leHRBcGlSZXF1ZXN0LCBOZXh0QXBpUmVzcG9uc2UgfSBmcm9tICduZXh0JztcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gaGFuZGxlcihyZXE6IE5leHRBcGlSZXF1ZXN0LCByZXM6IE5leHRBcGlSZXNwb25zZSkge1xuICByZXMuc3RhdHVzKDIwMCkuanNvbih7IG1vY2tNb2RlOiBNT0NLX01PREUgfSk7XG59XG4iXSwibmFtZXMiOlsiTU9DS19NT0RFIiwicHJvY2VzcyIsImVudiIsIk5FWFRfUFVCTElDX01PQ0tfTU9ERSIsIkRFQlVHX01PQ0siLCJORVhUX1BVQkxJQ19ERUJVR19NT0NLIiwiaGFuZGxlciIsInJlcSIsInJlcyIsInN0YXR1cyIsImpzb24iLCJtb2NrTW9kZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api)/./pages/api/mock-mode.ts\n");

/***/ }),

/***/ "(api)/./pages/api/news/index.ts":
/*!*********************************!*\
  !*** ./pages/api/news/index.ts ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var _utils_db_service__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../utils/db-service */ \"(api)/./utils/db-service.ts\");\n/* harmony import */ var next_auth_react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next-auth/react */ \"next-auth/react\");\n/* harmony import */ var next_auth_react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(next_auth_react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _mock_mode__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../mock-mode */ \"(api)/./pages/api/mock-mode.ts\");\n/* harmony import */ var _data_mockData__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../data/mockData */ \"(api)/./data/mockData.ts\");\n\n\n\n\n/**\n * Manipulador de API para notícias\n * GET: Obtém lista de notícias, com suporte a filtros e paginação\n * POST: Cria uma nova notícia (requer autenticação)\n */ async function handler(req, res) {\n    try {\n        // Obter sessão para verificar autenticação quando necessário\n        const session = await (0,next_auth_react__WEBPACK_IMPORTED_MODULE_1__.getSession)({\n            req\n        });\n        // Extrair parâmetros de consulta antes do switch para evitar erros de declarações lexicais\n        const limit = parseInt(req.query.limit) || 10;\n        const offset = parseInt(req.query.offset) || 0;\n        const categoryId = req.query.categoryId ? parseInt(req.query.categoryId) : undefined;\n        const featured = req.query.featured === \"true\";\n        const searchQuery = req.query.search;\n        const exclude = req.query.exclude ? parseInt(req.query.exclude) : undefined;\n        // Manipular diferentes métodos HTTP\n        switch(req.method){\n            case \"GET\":\n                // Verificar se estamos usando modo mock\n                if (_mock_mode__WEBPACK_IMPORTED_MODULE_2__.MOCK_MODE) {\n                    if (_mock_mode__WEBPACK_IMPORTED_MODULE_2__.DEBUG_MOCK) console.log(\"Usando dados mockados para a API de not\\xedcias\");\n                    // Selecionar dados apropriados\n                    let mockNews = featured ? [\n                        ..._data_mockData__WEBPACK_IMPORTED_MODULE_3__.featuredNews\n                    ] : [\n                        ..._data_mockData__WEBPACK_IMPORTED_MODULE_3__.latestNews\n                    ];\n                    // Aplicar filtros\n                    if (categoryId !== undefined) {\n                        const categories = {\n                            1: \"Pol\\xedtica\",\n                            2: \"Economia\",\n                            3: \"Tecnologia\",\n                            4: \"Esportes\",\n                            5: \"Sa\\xfade\",\n                            6: \"Ci\\xeancia\"\n                        };\n                        mockNews = mockNews.filter((item)=>item.category === categories[categoryId]);\n                    }\n                    // Aplicar busca\n                    if (searchQuery) {\n                        const query = searchQuery.toLowerCase();\n                        mockNews = mockNews.filter((item)=>item.title.toLowerCase().includes(query) || item.excerpt.toLowerCase().includes(query) || item.content && item.content.toLowerCase().includes(query));\n                    }\n                    // Excluir item específico\n                    if (exclude !== undefined) {\n                        mockNews = mockNews.filter((item)=>item.id !== exclude);\n                    }\n                    // Paginação\n                    const totalItems = mockNews.length;\n                    const paginatedNews = mockNews.slice(offset, offset + limit);\n                    // Formatar para corresponder à API real\n                    const formattedNews = paginatedNews.map((item)=>({\n                            id: item.id,\n                            title: item.title,\n                            slug: item.slug,\n                            excerpt: item.excerpt,\n                            content: item.content || \"\",\n                            image_url: item.imageUrl,\n                            category_id: 1,\n                            category_name: item.category,\n                            view_count: item.viewCount || 0,\n                            created_at: item.date,\n                            author_name: item.author\n                        }));\n                    return res.status(200).json({\n                        success: true,\n                        data: formattedNews,\n                        meta: {\n                            total: totalItems,\n                            page: Math.floor(offset / limit) + 1,\n                            pageSize: limit,\n                            totalPages: Math.ceil(totalItems / limit)\n                        }\n                    });\n                }\n                try {\n                    // Buscar notícias com o serviço de banco de dados real\n                    const { news, total } = await _utils_db_service__WEBPACK_IMPORTED_MODULE_0__.dbService.getNewsList({\n                        limit,\n                        offset,\n                        categoryId,\n                        featured,\n                        searchQuery\n                    });\n                    return res.status(200).json({\n                        success: true,\n                        data: news,\n                        meta: {\n                            total,\n                            page: Math.floor(offset / limit) + 1,\n                            pageSize: limit,\n                            totalPages: Math.ceil(total / limit)\n                        }\n                    });\n                } catch (dbError) {\n                    console.error(\"Erro ao acessar o banco de dados:\", dbError);\n                    // Usar mock como fallback\n                    const fallbackNews = featured ? [\n                        ..._data_mockData__WEBPACK_IMPORTED_MODULE_3__.featuredNews\n                    ] : [\n                        ..._data_mockData__WEBPACK_IMPORTED_MODULE_3__.latestNews\n                    ];\n                    const totalItems = fallbackNews.length;\n                    const paginatedFallback = fallbackNews.slice(offset, offset + limit);\n                    // Formatar para corresponder à API real\n                    const formattedFallback = paginatedFallback.map((item)=>({\n                            id: item.id,\n                            title: item.title,\n                            slug: item.slug,\n                            excerpt: item.excerpt,\n                            content: item.content || \"\",\n                            image_url: item.imageUrl,\n                            category_id: 1,\n                            category_name: item.category,\n                            view_count: item.viewCount || 0,\n                            created_at: item.date,\n                            author_name: item.author\n                        }));\n                    return res.status(200).json({\n                        success: true,\n                        data: formattedFallback,\n                        meta: {\n                            total: totalItems,\n                            page: Math.floor(offset / limit) + 1,\n                            pageSize: limit,\n                            totalPages: Math.ceil(totalItems / limit)\n                        }\n                    });\n                }\n            case \"POST\":\n                // Extrair todos os dados da requisição fora dos blocos para evitar erros de declaração\n                const { title, slug, content, excerpt, imageUrl, categoryId: catId, status, isFeatured } = req.body;\n                // Verificar autenticação\n                if (!session || !session.user) {\n                    return res.status(401).json({\n                        success: false,\n                        message: \"Voc\\xea precisa estar autenticado para criar uma not\\xedcia\"\n                    });\n                }\n                // Validar dados da requisição\n                if (!title || !slug || !content || !catId) {\n                    return res.status(400).json({\n                        success: false,\n                        message: \"Dados incompletos. T\\xedtulo, slug, conte\\xfado e categoria s\\xe3o obrigat\\xf3rios\"\n                    });\n                }\n                // Verificar se está no modo mock\n                if (_mock_mode__WEBPACK_IMPORTED_MODULE_2__.MOCK_MODE) {\n                    if (_mock_mode__WEBPACK_IMPORTED_MODULE_2__.DEBUG_MOCK) console.log(\"Criando not\\xedcia no modo mockado\");\n                    // Simular ID de notícia no modo mock\n                    const mockNewsId = Math.floor(Math.random() * 1000) + 100;\n                    return res.status(201).json({\n                        success: true,\n                        data: {\n                            id: mockNewsId\n                        },\n                        message: \"Not\\xedcia criada com sucesso (modo mockado)\"\n                    });\n                }\n                try {\n                    // Criar nova notícia usando o banco de dados real\n                    const userId = session.user ? session.user.id : 1;\n                    const newsId = await _utils_db_service__WEBPACK_IMPORTED_MODULE_0__.dbService.createNews({\n                        title,\n                        slug,\n                        content,\n                        excerpt: excerpt || \"\",\n                        imageUrl: imageUrl || \"\",\n                        categoryId: Number(catId),\n                        authorId: userId,\n                        status: status || \"draft\",\n                        isFeatured: isFeatured || false\n                    });\n                    return res.status(201).json({\n                        success: true,\n                        data: {\n                            id: newsId\n                        },\n                        message: \"Not\\xedcia criada com sucesso\"\n                    });\n                } catch (dbError) {\n                    console.error(\"Erro ao criar not\\xedcia no banco de dados:\", dbError);\n                    // Fallback para modo mock\n                    const fallbackId = Math.floor(Math.random() * 1000) + 100;\n                    return res.status(201).json({\n                        success: true,\n                        data: {\n                            id: fallbackId\n                        },\n                        message: \"Not\\xedcia criada com sucesso (modo fallback)\"\n                    });\n                }\n            default:\n                return res.status(405).json({\n                    success: false,\n                    message: \"M\\xe9todo n\\xe3o permitido\"\n                });\n        }\n    } catch (error) {\n        const errorMessage = error instanceof Error ? error.message : \"Erro interno do servidor\";\n        console.error(\"Erro na API de not\\xedcias:\", errorMessage);\n        // Se estiver em modo mock, tente fornecer dados mockados mesmo em caso de erro\n        if (_mock_mode__WEBPACK_IMPORTED_MODULE_2__.MOCK_MODE) {\n            console.warn(\"Fornecendo resposta mockada devido a erro na API\");\n            if (req.method === \"GET\") {\n                const mockData = [\n                    ..._data_mockData__WEBPACK_IMPORTED_MODULE_3__.latestNews\n                ].slice(0, 5).map((item)=>({\n                        id: item.id,\n                        title: item.title,\n                        slug: item.slug,\n                        excerpt: item.excerpt,\n                        content: item.content || \"\",\n                        image_url: item.imageUrl,\n                        category_id: 1,\n                        category_name: item.category,\n                        view_count: item.viewCount || 0,\n                        created_at: item.date,\n                        author_name: item.author\n                    }));\n                return res.status(200).json({\n                    success: true,\n                    data: mockData,\n                    meta: {\n                        total: mockData.length,\n                        page: 1,\n                        pageSize: mockData.length,\n                        totalPages: 1\n                    }\n                });\n            } else if (req.method === \"POST\") {\n                return res.status(201).json({\n                    success: true,\n                    data: {\n                        id: Math.floor(Math.random() * 1000) + 100\n                    },\n                    message: \"Not\\xedcia criada com sucesso (modo conting\\xeancia)\"\n                });\n            }\n        }\n        // Resposta padrão para erro\n        return res.status(500).json({\n            success: false,\n            message: errorMessage,\n            error:  true ? String(error) : 0\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QU0sS0FBSyxRQUFRO2dCQUNoQyxPQUFPWixJQUFJMkMsTUFBTSxDQUFDLEtBQUtDLElBQUksQ0FBQztvQkFDMUJDLFNBQVM7b0JBQ1RDLE1BQU07d0JBQUVyQixJQUFJeUIsS0FBS0MsS0FBSyxDQUFDRCxLQUFLa0IsTUFBTSxLQUFLLFFBQVE7b0JBQUk7b0JBQ25ERixTQUFTO2dCQUNYO1lBQ0Y7UUFDRjtRQUVBLDRCQUE0QjtRQUM1QixPQUFPbEUsSUFBSTJDLE1BQU0sQ0FBQyxLQUFLQyxJQUFJLENBQUM7WUFDMUJDLFNBQVM7WUFDVHFCLFNBQVNTO1lBQ1RqQixPQUFPcUIsS0FBeUIsR0FBZ0JDLE9BQU90QixTQUFTbkQsQ0FBU0E7UUFDM0U7SUFDRjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vam9ybmFsazEvLi9wYWdlcy9hcGkvbmV3cy9pbmRleC50cz84ZDdjIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5leHRBcGlSZXF1ZXN0LCBOZXh0QXBpUmVzcG9uc2UgfSBmcm9tICduZXh0JztcbmltcG9ydCB7IGRiU2VydmljZSB9IGZyb20gJy4uLy4uLy4uL3V0aWxzL2RiLXNlcnZpY2UnO1xuaW1wb3J0IHsgZ2V0U2Vzc2lvbiB9IGZyb20gJ25leHQtYXV0aC9yZWFjdCc7XG5pbXBvcnQgeyBNT0NLX01PREUsIERFQlVHX01PQ0sgfSBmcm9tICcuLi9tb2NrLW1vZGUnO1xuaW1wb3J0IHsgbGF0ZXN0TmV3cywgZmVhdHVyZWROZXdzIH0gZnJvbSAnLi4vLi4vLi4vZGF0YS9tb2NrRGF0YSc7XG5cbi8qKlxuICogTWFuaXB1bGFkb3IgZGUgQVBJIHBhcmEgbm90w61jaWFzXG4gKiBHRVQ6IE9idMOpbSBsaXN0YSBkZSBub3TDrWNpYXMsIGNvbSBzdXBvcnRlIGEgZmlsdHJvcyBlIHBhZ2luYcOnw6NvXG4gKiBQT1NUOiBDcmlhIHVtYSBub3ZhIG5vdMOtY2lhIChyZXF1ZXIgYXV0ZW50aWNhw6fDo28pXG4gKi9cbmV4cG9ydCBkZWZhdWx0IGFzeW5jIGZ1bmN0aW9uIGhhbmRsZXIocmVxOiBOZXh0QXBpUmVxdWVzdCwgcmVzOiBOZXh0QXBpUmVzcG9uc2UpIHtcbiAgdHJ5IHtcbiAgICAvLyBPYnRlciBzZXNzw6NvIHBhcmEgdmVyaWZpY2FyIGF1dGVudGljYcOnw6NvIHF1YW5kbyBuZWNlc3PDoXJpb1xuICAgIGNvbnN0IHNlc3Npb24gPSBhd2FpdCBnZXRTZXNzaW9uKHsgcmVxIH0pO1xuICAgIFxuICAgIC8vIEV4dHJhaXIgcGFyw6JtZXRyb3MgZGUgY29uc3VsdGEgYW50ZXMgZG8gc3dpdGNoIHBhcmEgZXZpdGFyIGVycm9zIGRlIGRlY2xhcmHDp8O1ZXMgbGV4aWNhaXNcbiAgICBjb25zdCBsaW1pdCA9IHBhcnNlSW50KHJlcS5xdWVyeS5saW1pdCBhcyBzdHJpbmcpIHx8IDEwO1xuICAgIGNvbnN0IG9mZnNldCA9IHBhcnNlSW50KHJlcS5xdWVyeS5vZmZzZXQgYXMgc3RyaW5nKSB8fCAwO1xuICAgIGNvbnN0IGNhdGVnb3J5SWQgPSByZXEucXVlcnkuY2F0ZWdvcnlJZCA/IHBhcnNlSW50KHJlcS5xdWVyeS5jYXRlZ29yeUlkIGFzIHN0cmluZykgOiB1bmRlZmluZWQ7XG4gICAgY29uc3QgZmVhdHVyZWQgPSByZXEucXVlcnkuZmVhdHVyZWQgPT09ICd0cnVlJztcbiAgICBjb25zdCBzZWFyY2hRdWVyeSA9IHJlcS5xdWVyeS5zZWFyY2ggYXMgc3RyaW5nO1xuICAgIGNvbnN0IGV4Y2x1ZGUgPSByZXEucXVlcnkuZXhjbHVkZSA/IHBhcnNlSW50KHJlcS5xdWVyeS5leGNsdWRlIGFzIHN0cmluZykgOiB1bmRlZmluZWQ7XG4gICAgXG4gICAgLy8gTWFuaXB1bGFyIGRpZmVyZW50ZXMgbcOpdG9kb3MgSFRUUFxuICAgIHN3aXRjaCAocmVxLm1ldGhvZCkge1xuICAgICAgY2FzZSAnR0VUJzpcbiAgICAgICAgLy8gVmVyaWZpY2FyIHNlIGVzdGFtb3MgdXNhbmRvIG1vZG8gbW9ja1xuICAgICAgICBpZiAoTU9DS19NT0RFKSB7XG4gICAgICAgICAgaWYgKERFQlVHX01PQ0spIGNvbnNvbGUubG9nKCdVc2FuZG8gZGFkb3MgbW9ja2Fkb3MgcGFyYSBhIEFQSSBkZSBub3TDrWNpYXMnKTtcbiAgICAgICAgICBcbiAgICAgICAgICAvLyBTZWxlY2lvbmFyIGRhZG9zIGFwcm9wcmlhZG9zXG4gICAgICAgICAgbGV0IG1vY2tOZXdzID0gZmVhdHVyZWQgPyBbLi4uZmVhdHVyZWROZXdzXSA6IFsuLi5sYXRlc3ROZXdzXTtcbiAgICAgICAgICBcbiAgICAgICAgICAvLyBBcGxpY2FyIGZpbHRyb3NcbiAgICAgICAgICBpZiAoY2F0ZWdvcnlJZCAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICBjb25zdCBjYXRlZ29yaWVzOiBSZWNvcmQ8bnVtYmVyLCBzdHJpbmc+ID0ge1xuICAgICAgICAgICAgICAxOiAnUG9sw610aWNhJyxcbiAgICAgICAgICAgICAgMjogJ0Vjb25vbWlhJyxcbiAgICAgICAgICAgICAgMzogJ1RlY25vbG9naWEnLFxuICAgICAgICAgICAgICA0OiAnRXNwb3J0ZXMnLFxuICAgICAgICAgICAgICA1OiAnU2HDumRlJyxcbiAgICAgICAgICAgICAgNjogJ0Npw6puY2lhJ1xuICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIG1vY2tOZXdzID0gbW9ja05ld3MuZmlsdGVyKGl0ZW0gPT4gaXRlbS5jYXRlZ29yeSA9PT0gY2F0ZWdvcmllc1tjYXRlZ29yeUlkXSk7XG4gICAgICAgICAgfVxuICAgICAgICAgIFxuICAgICAgICAgIC8vIEFwbGljYXIgYnVzY2FcbiAgICAgICAgICBpZiAoc2VhcmNoUXVlcnkpIHtcbiAgICAgICAgICAgIGNvbnN0IHF1ZXJ5ID0gc2VhcmNoUXVlcnkudG9Mb3dlckNhc2UoKTtcbiAgICAgICAgICAgIG1vY2tOZXdzID0gbW9ja05ld3MuZmlsdGVyKGl0ZW0gPT4gXG4gICAgICAgICAgICAgIGl0ZW0udGl0bGUudG9Mb3dlckNhc2UoKS5pbmNsdWRlcyhxdWVyeSkgfHwgXG4gICAgICAgICAgICAgIGl0ZW0uZXhjZXJwdC50b0xvd2VyQ2FzZSgpLmluY2x1ZGVzKHF1ZXJ5KSB8fFxuICAgICAgICAgICAgICAoaXRlbS5jb250ZW50ICYmIGl0ZW0uY29udGVudC50b0xvd2VyQ2FzZSgpLmluY2x1ZGVzKHF1ZXJ5KSlcbiAgICAgICAgICAgICk7XG4gICAgICAgICAgfVxuICAgICAgICAgIFxuICAgICAgICAgIC8vIEV4Y2x1aXIgaXRlbSBlc3BlY8OtZmljb1xuICAgICAgICAgIGlmIChleGNsdWRlICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIG1vY2tOZXdzID0gbW9ja05ld3MuZmlsdGVyKGl0ZW0gPT4gaXRlbS5pZCAhPT0gZXhjbHVkZSk7XG4gICAgICAgICAgfVxuICAgICAgICAgIFxuICAgICAgICAgIC8vIFBhZ2luYcOnw6NvXG4gICAgICAgICAgY29uc3QgdG90YWxJdGVtcyA9IG1vY2tOZXdzLmxlbmd0aDtcbiAgICAgICAgICBjb25zdCBwYWdpbmF0ZWROZXdzID0gbW9ja05ld3Muc2xpY2Uob2Zmc2V0LCBvZmZzZXQgKyBsaW1pdCk7XG4gICAgICAgICAgXG4gICAgICAgICAgLy8gRm9ybWF0YXIgcGFyYSBjb3JyZXNwb25kZXIgw6AgQVBJIHJlYWxcbiAgICAgICAgICBjb25zdCBmb3JtYXR0ZWROZXdzID0gcGFnaW5hdGVkTmV3cy5tYXAoaXRlbSA9PiAoe1xuICAgICAgICAgICAgaWQ6IGl0ZW0uaWQsXG4gICAgICAgICAgICB0aXRsZTogaXRlbS50aXRsZSxcbiAgICAgICAgICAgIHNsdWc6IGl0ZW0uc2x1ZyxcbiAgICAgICAgICAgIGV4Y2VycHQ6IGl0ZW0uZXhjZXJwdCxcbiAgICAgICAgICAgIGNvbnRlbnQ6IGl0ZW0uY29udGVudCB8fCAnJyxcbiAgICAgICAgICAgIGltYWdlX3VybDogaXRlbS5pbWFnZVVybCxcbiAgICAgICAgICAgIGNhdGVnb3J5X2lkOiAxLCAvLyBWYWxvcmVzIHNpbXBsaWZpY2Fkb3NcbiAgICAgICAgICAgIGNhdGVnb3J5X25hbWU6IGl0ZW0uY2F0ZWdvcnksXG4gICAgICAgICAgICB2aWV3X2NvdW50OiBpdGVtLnZpZXdDb3VudCB8fCAwLFxuICAgICAgICAgICAgY3JlYXRlZF9hdDogaXRlbS5kYXRlLFxuICAgICAgICAgICAgYXV0aG9yX25hbWU6IGl0ZW0uYXV0aG9yXG4gICAgICAgICAgfSkpO1xuICAgICAgICAgIFxuICAgICAgICAgIHJldHVybiByZXMuc3RhdHVzKDIwMCkuanNvbih7XG4gICAgICAgICAgICBzdWNjZXNzOiB0cnVlLFxuICAgICAgICAgICAgZGF0YTogZm9ybWF0dGVkTmV3cyxcbiAgICAgICAgICAgIG1ldGE6IHtcbiAgICAgICAgICAgICAgdG90YWw6IHRvdGFsSXRlbXMsXG4gICAgICAgICAgICAgIHBhZ2U6IE1hdGguZmxvb3Iob2Zmc2V0IC8gbGltaXQpICsgMSxcbiAgICAgICAgICAgICAgcGFnZVNpemU6IGxpbWl0LFxuICAgICAgICAgICAgICB0b3RhbFBhZ2VzOiBNYXRoLmNlaWwodG90YWxJdGVtcyAvIGxpbWl0KVxuICAgICAgICAgICAgfVxuICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICB0cnkge1xuICAgICAgICAgIC8vIEJ1c2NhciBub3TDrWNpYXMgY29tIG8gc2VydmnDp28gZGUgYmFuY28gZGUgZGFkb3MgcmVhbFxuICAgICAgICAgIGNvbnN0IHsgbmV3cywgdG90YWwgfSA9IGF3YWl0IGRiU2VydmljZS5nZXROZXdzTGlzdCh7XG4gICAgICAgICAgICBsaW1pdCxcbiAgICAgICAgICAgIG9mZnNldCxcbiAgICAgICAgICAgIGNhdGVnb3J5SWQsXG4gICAgICAgICAgICBmZWF0dXJlZCxcbiAgICAgICAgICAgIHNlYXJjaFF1ZXJ5XG4gICAgICAgICAgfSk7XG4gICAgICAgICAgXG4gICAgICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoMjAwKS5qc29uKHtcbiAgICAgICAgICAgIHN1Y2Nlc3M6IHRydWUsXG4gICAgICAgICAgICBkYXRhOiBuZXdzLFxuICAgICAgICAgICAgbWV0YToge1xuICAgICAgICAgICAgICB0b3RhbCxcbiAgICAgICAgICAgICAgcGFnZTogTWF0aC5mbG9vcihvZmZzZXQgLyBsaW1pdCkgKyAxLFxuICAgICAgICAgICAgICBwYWdlU2l6ZTogbGltaXQsXG4gICAgICAgICAgICAgIHRvdGFsUGFnZXM6IE1hdGguY2VpbCh0b3RhbCAvIGxpbWl0KVxuICAgICAgICAgICAgfVxuICAgICAgICAgIH0pO1xuICAgICAgICB9IGNhdGNoIChkYkVycm9yKSB7XG4gICAgICAgICAgY29uc29sZS5lcnJvcignRXJybyBhbyBhY2Vzc2FyIG8gYmFuY28gZGUgZGFkb3M6JywgZGJFcnJvcik7XG4gICAgICAgICAgXG4gICAgICAgICAgLy8gVXNhciBtb2NrIGNvbW8gZmFsbGJhY2tcbiAgICAgICAgICBjb25zdCBmYWxsYmFja05ld3MgPSBmZWF0dXJlZCA/IFsuLi5mZWF0dXJlZE5ld3NdIDogWy4uLmxhdGVzdE5ld3NdO1xuICAgICAgICAgIGNvbnN0IHRvdGFsSXRlbXMgPSBmYWxsYmFja05ld3MubGVuZ3RoO1xuICAgICAgICAgIGNvbnN0IHBhZ2luYXRlZEZhbGxiYWNrID0gZmFsbGJhY2tOZXdzLnNsaWNlKG9mZnNldCwgb2Zmc2V0ICsgbGltaXQpO1xuICAgICAgICAgIFxuICAgICAgICAgIC8vIEZvcm1hdGFyIHBhcmEgY29ycmVzcG9uZGVyIMOgIEFQSSByZWFsXG4gICAgICAgICAgY29uc3QgZm9ybWF0dGVkRmFsbGJhY2sgPSBwYWdpbmF0ZWRGYWxsYmFjay5tYXAoaXRlbSA9PiAoe1xuICAgICAgICAgICAgaWQ6IGl0ZW0uaWQsXG4gICAgICAgICAgICB0aXRsZTogaXRlbS50aXRsZSxcbiAgICAgICAgICAgIHNsdWc6IGl0ZW0uc2x1ZyxcbiAgICAgICAgICAgIGV4Y2VycHQ6IGl0ZW0uZXhjZXJwdCxcbiAgICAgICAgICAgIGNvbnRlbnQ6IGl0ZW0uY29udGVudCB8fCAnJyxcbiAgICAgICAgICAgIGltYWdlX3VybDogaXRlbS5pbWFnZVVybCxcbiAgICAgICAgICAgIGNhdGVnb3J5X2lkOiAxLFxuICAgICAgICAgICAgY2F0ZWdvcnlfbmFtZTogaXRlbS5jYXRlZ29yeSxcbiAgICAgICAgICAgIHZpZXdfY291bnQ6IGl0ZW0udmlld0NvdW50IHx8IDAsXG4gICAgICAgICAgICBjcmVhdGVkX2F0OiBpdGVtLmRhdGUsXG4gICAgICAgICAgICBhdXRob3JfbmFtZTogaXRlbS5hdXRob3JcbiAgICAgICAgICB9KSk7XG4gICAgICAgICAgXG4gICAgICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoMjAwKS5qc29uKHtcbiAgICAgICAgICAgIHN1Y2Nlc3M6IHRydWUsXG4gICAgICAgICAgICBkYXRhOiBmb3JtYXR0ZWRGYWxsYmFjayxcbiAgICAgICAgICAgIG1ldGE6IHtcbiAgICAgICAgICAgICAgdG90YWw6IHRvdGFsSXRlbXMsXG4gICAgICAgICAgICAgIHBhZ2U6IE1hdGguZmxvb3Iob2Zmc2V0IC8gbGltaXQpICsgMSxcbiAgICAgICAgICAgICAgcGFnZVNpemU6IGxpbWl0LFxuICAgICAgICAgICAgICB0b3RhbFBhZ2VzOiBNYXRoLmNlaWwodG90YWxJdGVtcyAvIGxpbWl0KVxuICAgICAgICAgICAgfVxuICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICBcbiAgICAgIGNhc2UgJ1BPU1QnOlxuICAgICAgICAvLyBFeHRyYWlyIHRvZG9zIG9zIGRhZG9zIGRhIHJlcXVpc2nDp8OjbyBmb3JhIGRvcyBibG9jb3MgcGFyYSBldml0YXIgZXJyb3MgZGUgZGVjbGFyYcOnw6NvXG4gICAgICAgIGNvbnN0IHsgdGl0bGUsIHNsdWcsIGNvbnRlbnQsIGV4Y2VycHQsIGltYWdlVXJsLCBjYXRlZ29yeUlkOiBjYXRJZCwgc3RhdHVzLCBpc0ZlYXR1cmVkIH0gPSByZXEuYm9keTtcbiAgICAgICAgXG4gICAgICAgIC8vIFZlcmlmaWNhciBhdXRlbnRpY2HDp8Ojb1xuICAgICAgICBpZiAoIXNlc3Npb24gfHwgIXNlc3Npb24udXNlcikge1xuICAgICAgICAgIHJldHVybiByZXMuc3RhdHVzKDQwMSkuanNvbih7XG4gICAgICAgICAgICBzdWNjZXNzOiBmYWxzZSxcbiAgICAgICAgICAgIG1lc3NhZ2U6ICdWb2PDqiBwcmVjaXNhIGVzdGFyIGF1dGVudGljYWRvIHBhcmEgY3JpYXIgdW1hIG5vdMOtY2lhJ1xuICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICAvLyBWYWxpZGFyIGRhZG9zIGRhIHJlcXVpc2nDp8Ojb1xuICAgICAgICBpZiAoIXRpdGxlIHx8ICFzbHVnIHx8ICFjb250ZW50IHx8ICFjYXRJZCkge1xuICAgICAgICAgIHJldHVybiByZXMuc3RhdHVzKDQwMCkuanNvbih7XG4gICAgICAgICAgICBzdWNjZXNzOiBmYWxzZSxcbiAgICAgICAgICAgIG1lc3NhZ2U6ICdEYWRvcyBpbmNvbXBsZXRvcy4gVMOtdHVsbywgc2x1ZywgY29udGXDumRvIGUgY2F0ZWdvcmlhIHPDo28gb2JyaWdhdMOzcmlvcydcbiAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgLy8gVmVyaWZpY2FyIHNlIGVzdMOhIG5vIG1vZG8gbW9ja1xuICAgICAgICBpZiAoTU9DS19NT0RFKSB7XG4gICAgICAgICAgaWYgKERFQlVHX01PQ0spIGNvbnNvbGUubG9nKCdDcmlhbmRvIG5vdMOtY2lhIG5vIG1vZG8gbW9ja2FkbycpO1xuICAgICAgICAgIFxuICAgICAgICAgIC8vIFNpbXVsYXIgSUQgZGUgbm90w61jaWEgbm8gbW9kbyBtb2NrXG4gICAgICAgICAgY29uc3QgbW9ja05ld3NJZCA9IE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIDEwMDApICsgMTAwO1xuICAgICAgICAgIFxuICAgICAgICAgIHJldHVybiByZXMuc3RhdHVzKDIwMSkuanNvbih7XG4gICAgICAgICAgICBzdWNjZXNzOiB0cnVlLFxuICAgICAgICAgICAgZGF0YTogeyBpZDogbW9ja05ld3NJZCB9LFxuICAgICAgICAgICAgbWVzc2FnZTogJ05vdMOtY2lhIGNyaWFkYSBjb20gc3VjZXNzbyAobW9kbyBtb2NrYWRvKSdcbiAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgICBcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAvLyBDcmlhciBub3ZhIG5vdMOtY2lhIHVzYW5kbyBvIGJhbmNvIGRlIGRhZG9zIHJlYWxcbiAgICAgICAgICBjb25zdCB1c2VySWQgPSBzZXNzaW9uLnVzZXIgPyAoc2Vzc2lvbi51c2VyIGFzIHtpZDogbnVtYmVyfSkuaWQgOiAxO1xuICAgICAgICAgIFxuICAgICAgICAgIGNvbnN0IG5ld3NJZCA9IGF3YWl0IGRiU2VydmljZS5jcmVhdGVOZXdzKHtcbiAgICAgICAgICAgIHRpdGxlLFxuICAgICAgICAgICAgc2x1ZyxcbiAgICAgICAgICAgIGNvbnRlbnQsXG4gICAgICAgICAgICBleGNlcnB0OiBleGNlcnB0IHx8ICcnLFxuICAgICAgICAgICAgaW1hZ2VVcmw6IGltYWdlVXJsIHx8ICcnLFxuICAgICAgICAgICAgY2F0ZWdvcnlJZDogTnVtYmVyKGNhdElkKSxcbiAgICAgICAgICAgIGF1dGhvcklkOiB1c2VySWQsXG4gICAgICAgICAgICBzdGF0dXM6IHN0YXR1cyB8fCAnZHJhZnQnLFxuICAgICAgICAgICAgaXNGZWF0dXJlZDogaXNGZWF0dXJlZCB8fCBmYWxzZVxuICAgICAgICAgIH0pO1xuICAgICAgICAgIFxuICAgICAgICAgIHJldHVybiByZXMuc3RhdHVzKDIwMSkuanNvbih7XG4gICAgICAgICAgICBzdWNjZXNzOiB0cnVlLFxuICAgICAgICAgICAgZGF0YTogeyBpZDogbmV3c0lkIH0sXG4gICAgICAgICAgICBtZXNzYWdlOiAnTm90w61jaWEgY3JpYWRhIGNvbSBzdWNlc3NvJ1xuICAgICAgICAgIH0pO1xuICAgICAgICB9IGNhdGNoIChkYkVycm9yKSB7XG4gICAgICAgICAgY29uc29sZS5lcnJvcignRXJybyBhbyBjcmlhciBub3TDrWNpYSBubyBiYW5jbyBkZSBkYWRvczonLCBkYkVycm9yKTtcbiAgICAgICAgICBcbiAgICAgICAgICAvLyBGYWxsYmFjayBwYXJhIG1vZG8gbW9ja1xuICAgICAgICAgIGNvbnN0IGZhbGxiYWNrSWQgPSBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiAxMDAwKSArIDEwMDtcbiAgICAgICAgICBcbiAgICAgICAgICByZXR1cm4gcmVzLnN0YXR1cygyMDEpLmpzb24oe1xuICAgICAgICAgICAgc3VjY2VzczogdHJ1ZSxcbiAgICAgICAgICAgIGRhdGE6IHsgaWQ6IGZhbGxiYWNrSWQgfSxcbiAgICAgICAgICAgIG1lc3NhZ2U6ICdOb3TDrWNpYSBjcmlhZGEgY29tIHN1Y2Vzc28gKG1vZG8gZmFsbGJhY2spJ1xuICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICBcbiAgICAgIGRlZmF1bHQ6XG4gICAgICAgIHJldHVybiByZXMuc3RhdHVzKDQwNSkuanNvbih7XG4gICAgICAgICAgc3VjY2VzczogZmFsc2UsXG4gICAgICAgICAgbWVzc2FnZTogJ03DqXRvZG8gbsOjbyBwZXJtaXRpZG8nXG4gICAgICAgIH0pO1xuICAgIH1cbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBjb25zdCBlcnJvck1lc3NhZ2UgPSBlcnJvciBpbnN0YW5jZW9mIEVycm9yID8gZXJyb3IubWVzc2FnZSA6ICdFcnJvIGludGVybm8gZG8gc2Vydmlkb3InO1xuICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm8gbmEgQVBJIGRlIG5vdMOtY2lhczonLCBlcnJvck1lc3NhZ2UpO1xuICAgIFxuICAgIC8vIFNlIGVzdGl2ZXIgZW0gbW9kbyBtb2NrLCB0ZW50ZSBmb3JuZWNlciBkYWRvcyBtb2NrYWRvcyBtZXNtbyBlbSBjYXNvIGRlIGVycm9cbiAgICBpZiAoTU9DS19NT0RFKSB7XG4gICAgICBjb25zb2xlLndhcm4oJ0Zvcm5lY2VuZG8gcmVzcG9zdGEgbW9ja2FkYSBkZXZpZG8gYSBlcnJvIG5hIEFQSScpO1xuICAgICAgXG4gICAgICBpZiAocmVxLm1ldGhvZCA9PT0gJ0dFVCcpIHtcbiAgICAgICAgY29uc3QgbW9ja0RhdGEgPSBbLi4ubGF0ZXN0TmV3c10uc2xpY2UoMCwgNSkubWFwKGl0ZW0gPT4gKHtcbiAgICAgICAgICBpZDogaXRlbS5pZCxcbiAgICAgICAgICB0aXRsZTogaXRlbS50aXRsZSxcbiAgICAgICAgICBzbHVnOiBpdGVtLnNsdWcsXG4gICAgICAgICAgZXhjZXJwdDogaXRlbS5leGNlcnB0LFxuICAgICAgICAgIGNvbnRlbnQ6IGl0ZW0uY29udGVudCB8fCAnJyxcbiAgICAgICAgICBpbWFnZV91cmw6IGl0ZW0uaW1hZ2VVcmwsXG4gICAgICAgICAgY2F0ZWdvcnlfaWQ6IDEsXG4gICAgICAgICAgY2F0ZWdvcnlfbmFtZTogaXRlbS5jYXRlZ29yeSxcbiAgICAgICAgICB2aWV3X2NvdW50OiBpdGVtLnZpZXdDb3VudCB8fCAwLFxuICAgICAgICAgIGNyZWF0ZWRfYXQ6IGl0ZW0uZGF0ZSxcbiAgICAgICAgICBhdXRob3JfbmFtZTogaXRlbS5hdXRob3JcbiAgICAgICAgfSkpO1xuICAgICAgICBcbiAgICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoMjAwKS5qc29uKHtcbiAgICAgICAgICBzdWNjZXNzOiB0cnVlLFxuICAgICAgICAgIGRhdGE6IG1vY2tEYXRhLFxuICAgICAgICAgIG1ldGE6IHtcbiAgICAgICAgICAgIHRvdGFsOiBtb2NrRGF0YS5sZW5ndGgsXG4gICAgICAgICAgICBwYWdlOiAxLFxuICAgICAgICAgICAgcGFnZVNpemU6IG1vY2tEYXRhLmxlbmd0aCxcbiAgICAgICAgICAgIHRvdGFsUGFnZXM6IDFcbiAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgfSBlbHNlIGlmIChyZXEubWV0aG9kID09PSAnUE9TVCcpIHtcbiAgICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoMjAxKS5qc29uKHtcbiAgICAgICAgICBzdWNjZXNzOiB0cnVlLFxuICAgICAgICAgIGRhdGE6IHsgaWQ6IE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIDEwMDApICsgMTAwIH0sXG4gICAgICAgICAgbWVzc2FnZTogJ05vdMOtY2lhIGNyaWFkYSBjb20gc3VjZXNzbyAobW9kbyBjb250aW5nw6puY2lhKSdcbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgfVxuICAgIFxuICAgIC8vIFJlc3Bvc3RhIHBhZHLDo28gcGFyYSBlcnJvXG4gICAgcmV0dXJuIHJlcy5zdGF0dXMoNTAwKS5qc29uKHtcbiAgICAgIHN1Y2Nlc3M6IGZhbHNlLFxuICAgICAgbWVzc2FnZTogZXJyb3JNZXNzYWdlLFxuICAgICAgZXJyb3I6IHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAnZGV2ZWxvcG1lbnQnID8gU3RyaW5nKGVycm9yKSA6IHVuZGVmaW5lZFxuICAgIH0pO1xuICB9XG59XG4iXSwibmFtZXMiOlsiZGJTZXJ2aWNlIiwiZ2V0U2Vzc2lvbiIsIk1PQ0tfTU9ERSIsIkRFQlVHX01PQ0siLCJsYXRlc3ROZXdzIiwiZmVhdHVyZWROZXdzIiwiaGFuZGxlciIsInJlcSIsInJlcyIsInNlc3Npb24iLCJsaW1pdCIsInBhcnNlSW50IiwicXVlcnkiLCJvZmZzZXQiLCJjYXRlZ29yeUlkIiwidW5kZWZpbmVkIiwiZmVhdHVyZWQiLCJzZWFyY2hRdWVyeSIsInNlYXJjaCIsImV4Y2x1ZGUiLCJtZXRob2QiLCJjb25zb2xlIiwibG9nIiwibW9ja05ld3MiLCJjYXRlZ29yaWVzIiwiZmlsdGVyIiwiaXRlbSIsImNhdGVnb3J5IiwidG9Mb3dlckNhc2UiLCJ0aXRsZSIsImluY2x1ZGVzIiwiZXhjZXJwdCIsImNvbnRlbnQiLCJpZCIsInRvdGFsSXRlbXMiLCJsZW5ndGgiLCJwYWdpbmF0ZWROZXdzIiwic2xpY2UiLCJmb3JtYXR0ZWROZXdzIiwibWFwIiwic2x1ZyIsImltYWdlX3VybCIsImltYWdlVXJsIiwiY2F0ZWdvcnlfaWQiLCJjYXRlZ29yeV9uYW1lIiwidmlld19jb3VudCIsInZpZXdDb3VudCIsImNyZWF0ZWRfYXQiLCJkYXRlIiwiYXV0aG9yX25hbWUiLCJhdXRob3IiLCJzdGF0dXMiLCJqc29uIiwic3VjY2VzcyIsImRhdGEiLCJtZXRhIiwidG90YWwiLCJwYWdlIiwiTWF0aCIsImZsb29yIiwicGFnZVNpemUiLCJ0b3RhbFBhZ2VzIiwiY2VpbCIsIm5ld3MiLCJnZXROZXdzTGlzdCIsImRiRXJyb3IiLCJlcnJvciIsImZhbGxiYWNrTmV3cyIsInBhZ2luYXRlZEZhbGxiYWNrIiwiZm9ybWF0dGVkRmFsbGJhY2siLCJjYXRJZCIsImlzRmVhdHVyZWQiLCJib2R5IiwidXNlciIsIm1lc3NhZ2UiLCJtb2NrTmV3c0lkIiwicmFuZG9tIiwidXNlcklkIiwibmV3c0lkIiwiY3JlYXRlTmV3cyIsIk51bWJlciIsImF1dGhvcklkIiwiZmFsbGJhY2tJZCIsImVycm9yTWVzc2FnZSIsIkVycm9yIiwid2FybiIsIm1vY2tEYXRhIiwicHJvY2VzcyIsIlN0cmluZyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api)/./pages/api/news/index.ts\n");

/***/ }),

/***/ "(api)/./utils/db-service.ts":
/*!*****************************!*\
  !*** ./utils/db-service.ts ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   dbService: () => (/* binding */ dbService)\n/* harmony export */ });\n/* harmony import */ var _db__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./db */ \"(api)/./utils/db.ts\");\n\n/**\n * Serviço para manipulação de dados do banco\n * Implementa cache e tratamento de erros\n */ class DatabaseService {\n    /**\n   * Verifica se o cache é válido\n   */ isCacheValid(cacheKey) {\n        if (!this.cache[cacheKey]) return false;\n        const now = Date.now();\n        return now - this.cache[cacheKey].timestamp < this.CACHE_TTL;\n    }\n    /**\n   * Obtém notícia por slug com cache\n   */ async getNewsBySlug(slug) {\n        const cacheKey = `news_${slug}`;\n        if (this.isCacheValid(cacheKey)) {\n            return this.cache[cacheKey].data;\n        }\n        try {\n            const result = await (0,_db__WEBPACK_IMPORTED_MODULE_0__.executeQuery)(`SELECT n.*, c.name as category_name, u.name as author_name\n         FROM news n\n         JOIN categories c ON n.category_id = c.id\n         JOIN users u ON n.author_id = u.id\n         WHERE n.slug = ? AND n.status = 'published'`, [\n                slug\n            ]);\n            const news = result.length > 0 ? result[0] : null;\n            // Atualiza o cache\n            this.cache[cacheKey] = {\n                data: news,\n                timestamp: Date.now()\n            };\n            // Incrementa visualizações\n            if (news) {\n                await this.incrementViewCount(news.id);\n            }\n            return news;\n        } catch (error) {\n            console.error(`Erro ao buscar notícia com slug ${slug}:`, error);\n            return null;\n        }\n    }\n    /**\n   * Incrementa contador de visualizações de uma notícia\n   */ async incrementViewCount(newsId) {\n        try {\n            await (0,_db__WEBPACK_IMPORTED_MODULE_0__.executeQuery)(\"UPDATE news SET view_count = view_count + 1 WHERE id = ?\", [\n                newsId\n            ]);\n        } catch (error) {\n            console.error(`Erro ao incrementar visualizações para notícia ${newsId}:`, error);\n        }\n    }\n    /**\n   * Obtém lista de notícias com filtros\n   */ async getNewsList(options) {\n        const { limit = 10, offset = 0, categoryId, featured = false, searchQuery } = options;\n        const cacheKey = `news_list_${limit}_${offset}_${categoryId}_${featured}_${searchQuery}`;\n        if (this.isCacheValid(cacheKey)) {\n            return this.cache[cacheKey].data;\n        }\n        try {\n            // Construção da query base\n            let query = `\n        SELECT n.*, c.name as category_name, u.name as author_name\n        FROM news n\n        JOIN categories c ON n.category_id = c.id\n        JOIN users u ON n.author_id = u.id\n        WHERE n.status = 'published'\n      `;\n            // Construção da query para total\n            let countQuery = `\n        SELECT COUNT(*) as total\n        FROM news n\n        WHERE n.status = 'published'\n      `;\n            const params = [];\n            const countParams = [];\n            // Adiciona filtro de categoria\n            if (categoryId !== undefined && categoryId !== null) {\n                query += \" AND n.category_id = ?\";\n                countQuery += \" AND n.category_id = ?\";\n                params.push(categoryId);\n                countParams.push(categoryId);\n            }\n            // Adiciona filtro de featured\n            if (featured) {\n                query += \" AND n.is_featured = 1\";\n                countQuery += \" AND n.is_featured = 1\";\n            }\n            // Adiciona filtro de busca\n            if (searchQuery) {\n                query += \" AND (n.title LIKE ? OR n.content LIKE ? OR n.excerpt LIKE ?)\";\n                countQuery += \" AND (n.title LIKE ? OR n.content LIKE ? OR n.excerpt LIKE ?)\";\n                const searchParam = `%${searchQuery}%`;\n                params.push(searchParam, searchParam, searchParam);\n                countParams.push(searchParam, searchParam, searchParam);\n            }\n            // Finaliza queries\n            query += \" ORDER BY n.created_at DESC LIMIT ? OFFSET ?\";\n            params.push(limit, offset);\n            // Executa queries\n            const news = await (0,_db__WEBPACK_IMPORTED_MODULE_0__.executeQuery)(query, params);\n            const totalResult = await (0,_db__WEBPACK_IMPORTED_MODULE_0__.executeQuery)(countQuery, countParams);\n            const total = totalResult[0]?.total || 0;\n            const result = {\n                news,\n                total\n            };\n            // Atualiza cache\n            this.cache[cacheKey] = {\n                data: result,\n                timestamp: Date.now()\n            };\n            return result;\n        } catch (error) {\n            console.error(\"Erro ao buscar lista de not\\xedcias:\", error);\n            return {\n                news: [],\n                total: 0\n            };\n        }\n    }\n    /**\n   * Obtém categorias com contagem de notícias\n   */ async getCategories() {\n        const cacheKey = \"categories\";\n        if (this.isCacheValid(cacheKey)) {\n            return this.cache[cacheKey].data;\n        }\n        try {\n            const categories = await (0,_db__WEBPACK_IMPORTED_MODULE_0__.executeQuery)(`\n        SELECT c.*, COUNT(n.id) as news_count\n        FROM categories c\n        LEFT JOIN news n ON c.id = n.category_id AND n.status = 'published'\n        GROUP BY c.id\n        ORDER BY c.name\n      `);\n            this.cache[cacheKey] = {\n                data: categories,\n                timestamp: Date.now()\n            };\n            return categories;\n        } catch (error) {\n            console.error(\"Erro ao buscar categorias:\", error);\n            return [];\n        }\n    }\n    /**\n   * Limpa o cache quando há modificações no banco\n   */ clearCache() {\n        this.cache = {};\n    }\n    /**\n   * Cria uma nova notícia\n   */ async createNews(newsData) {\n        try {\n            const result = await (0,_db__WEBPACK_IMPORTED_MODULE_0__.executeQuery)(`INSERT INTO news (\n          title, slug, content, excerpt, image_url, \n          category_id, author_id, status, is_featured,\n          created_at, updated_at\n        ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, NOW(), NOW())`, [\n                newsData.title,\n                newsData.slug,\n                newsData.content,\n                newsData.excerpt,\n                newsData.imageUrl,\n                newsData.categoryId,\n                newsData.authorId,\n                newsData.status,\n                newsData.isFeatured ? 1 : 0\n            ]);\n            this.clearCache();\n            return result.insertId;\n        } catch (error) {\n            console.error(\"Erro ao criar not\\xedcia:\", error);\n            throw error;\n        }\n    }\n    /**\n   * Atualiza uma notícia existente\n   */ async updateNews(id, newsData) {\n        try {\n            const result = await (0,_db__WEBPACK_IMPORTED_MODULE_0__.executeQuery)(`UPDATE news SET\n          title = ?,\n          slug = ?,\n          content = ?,\n          excerpt = ?,\n          image_url = ?,\n          category_id = ?,\n          status = ?,\n          is_featured = ?,\n          updated_at = NOW()\n        WHERE id = ?`, [\n                newsData.title,\n                newsData.slug,\n                newsData.content,\n                newsData.excerpt,\n                newsData.imageUrl,\n                newsData.categoryId,\n                newsData.status,\n                newsData.isFeatured ? 1 : 0,\n                id\n            ]);\n            this.clearCache();\n            return result.affectedRows > 0;\n        } catch (error) {\n            console.error(`Erro ao atualizar notícia ${id}:`, error);\n            throw error;\n        }\n    }\n    /**\n   * Exclui uma notícia\n   */ async deleteNews(id) {\n        try {\n            const result = await (0,_db__WEBPACK_IMPORTED_MODULE_0__.executeQuery)(\"DELETE FROM news WHERE id = ?\", [\n                id\n            ]);\n            this.clearCache();\n            return result.affectedRows > 0;\n        } catch (error) {\n            console.error(`Erro ao excluir notícia ${id}:`, error);\n            throw error;\n        }\n    }\n    constructor(){\n        this.cache = {};\n        this.CACHE_TTL = 1000 * 60 * 5 // 5 minutos\n        ;\n    }\n}\n// Exporta uma instância única do serviço\nconst dbService = new DatabaseService();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./utils/db-service.ts\n");

/***/ }),

/***/ "(api)/./utils/db.ts":
/*!*********************!*\
  !*** ./utils/db.ts ***!
  \*********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createNews: () => (/* binding */ createNews),\n/* harmony export */   deleteNews: () => (/* binding */ deleteNews),\n/* harmony export */   executeQuery: () => (/* binding */ executeQuery),\n/* harmony export */   getAllCategories: () => (/* binding */ getAllCategories),\n/* harmony export */   getAllNews: () => (/* binding */ getAllNews),\n/* harmony export */   getFeaturedNews: () => (/* binding */ getFeaturedNews),\n/* harmony export */   getNewsBySlug: () => (/* binding */ getNewsBySlug),\n/* harmony export */   updateNews: () => (/* binding */ updateNews)\n/* harmony export */ });\n/* harmony import */ var mysql2_promise__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mysql2/promise */ \"mysql2/promise\");\n/* harmony import */ var mysql2_promise__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(mysql2_promise__WEBPACK_IMPORTED_MODULE_0__);\n\n// Database connection configuration\nconst dbConfig = {\n    host: process.env.DB_HOST || \"localhost\",\n    user: process.env.DB_USER || \"root\",\n    password: process.env.DB_PASSWORD || \"\",\n    database: process.env.DB_NAME || \"jornalk1\"\n};\n// Create a connection pool\nconst pool = mysql2_promise__WEBPACK_IMPORTED_MODULE_0___default().createPool(dbConfig);\nasync function executeQuery(query, params = []) {\n    try {\n        const [results] = await pool.execute(query, params);\n        return results;\n    } catch (error) {\n        console.error(\"Database query error:\", error);\n        throw error;\n    }\n}\n// Helper function to get a single news article by slug\nasync function getNewsBySlug(slug) {\n    const query = `\n    SELECT n.*, c.name as category_name \n    FROM news n\n    JOIN categories c ON n.category_id = c.id\n    WHERE n.slug = ? AND n.status = 'published'\n  `;\n    const results = await executeQuery(query, [\n        slug\n    ]);\n    return results.length > 0 ? results[0] : null;\n}\n// Helper function to get all published news articles\nasync function getAllNews(limit = 10, offset = 0, categoryId) {\n    let query = `\n    SELECT n.*, c.name as category_name \n    FROM news n\n    JOIN categories c ON n.category_id = c.id\n    WHERE n.status = 'published'\n  `;\n    const params = [];\n    if (categoryId) {\n        query += \" AND n.category_id = ?\";\n        params.push(categoryId);\n    }\n    query += \" ORDER BY n.created_at DESC LIMIT ? OFFSET ?\";\n    params.push(limit, offset);\n    return executeQuery(query, params);\n}\n// Helper function to get featured news articles\nasync function getFeaturedNews(limit = 5) {\n    const query = `\n    SELECT n.*, c.name as category_name \n    FROM news n\n    JOIN categories c ON n.category_id = c.id\n    WHERE n.status = 'published' AND n.is_featured = 1\n    ORDER BY n.created_at DESC\n    LIMIT ?\n  `;\n    return executeQuery(query, [\n        limit\n    ]);\n}\n// Helper function to get all categories\nasync function getAllCategories() {\n    const query = `\n    SELECT c.*, COUNT(n.id) as news_count\n    FROM categories c\n    LEFT JOIN news n ON c.id = n.category_id AND n.status = 'published'\n    GROUP BY c.id\n    ORDER BY c.name\n  `;\n    return executeQuery(query, []);\n}\nasync function createNews(newsData) {\n    const query = `\n    INSERT INTO news (\n      title, slug, content, excerpt, image_url, \n      category_id, author_id, status, is_featured, \n      created_at, updated_at\n    ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, NOW(), NOW())\n  `;\n    const params = [\n        newsData.title,\n        newsData.slug,\n        newsData.content,\n        newsData.excerpt,\n        newsData.imageUrl,\n        newsData.categoryId,\n        newsData.authorId,\n        newsData.status,\n        newsData.isFeatured ? 1 : 0\n    ];\n    const result = await executeQuery(query, params);\n    return result.insertId;\n}\n// Helper function to update an existing news article\nasync function updateNews(id, newsData) {\n    const query = `\n    UPDATE news SET\n      title = ?,\n      slug = ?,\n      content = ?,\n      excerpt = ?,\n      image_url = ?,\n      category_id = ?,\n      status = ?,\n      is_featured = ?,\n      updated_at = NOW()\n    WHERE id = ?\n  `;\n    const params = [\n        newsData.title,\n        newsData.slug,\n        newsData.content,\n        newsData.excerpt,\n        newsData.imageUrl,\n        newsData.categoryId,\n        newsData.status,\n        newsData.isFeatured ? 1 : 0,\n        id\n    ];\n    return executeQuery(query, params);\n}\n// Helper function to delete a news article\nasync function deleteNews(id) {\n    const query = \"DELETE FROM news WHERE id = ?\";\n    return executeQuery(query, [\n        id\n    ]);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QUFVO0lBQ3pDLE1BQU01QixRQUFRO0lBS2QsT0FBT0QsYUFBMkJDLE9BQU87UUFBQzRCO0tBQUc7QUFDL0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9qb3JuYWxrMS8uL3V0aWxzL2RiLnRzP2NkN2IiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IG15c3FsIGZyb20gJ215c3FsMi9wcm9taXNlJztcblxuLy8gRGF0YWJhc2UgY29ubmVjdGlvbiBjb25maWd1cmF0aW9uXG5jb25zdCBkYkNvbmZpZyA9IHtcbiAgaG9zdDogcHJvY2Vzcy5lbnYuREJfSE9TVCB8fCAnbG9jYWxob3N0JyxcbiAgdXNlcjogcHJvY2Vzcy5lbnYuREJfVVNFUiB8fCAncm9vdCcsXG4gIHBhc3N3b3JkOiBwcm9jZXNzLmVudi5EQl9QQVNTV09SRCB8fCAnJyxcbiAgZGF0YWJhc2U6IHByb2Nlc3MuZW52LkRCX05BTUUgfHwgJ2pvcm5hbGsxJyxcbn07XG5cbi8vIENyZWF0ZSBhIGNvbm5lY3Rpb24gcG9vbFxuY29uc3QgcG9vbCA9IG15c3FsLmNyZWF0ZVBvb2woZGJDb25maWcpO1xuXG4vLyBIZWxwZXIgZnVuY3Rpb24gdG8gZXhlY3V0ZSBTUUwgcXVlcmllc1xudHlwZSBRdWVyeVBhcmFtcyA9IHN0cmluZyB8IG51bWJlciB8IGJvb2xlYW4gfCBudWxsIHwgQnVmZmVyO1xuXG5pbnRlcmZhY2UgTmV3c0FydGljbGUge1xuICBpZDogbnVtYmVyO1xuICB0aXRsZTogc3RyaW5nO1xuICBzbHVnOiBzdHJpbmc7XG4gIGNvbnRlbnQ6IHN0cmluZztcbiAgZXhjZXJwdDogc3RyaW5nO1xuICBpbWFnZV91cmw6IHN0cmluZztcbiAgY2F0ZWdvcnlfaWQ6IG51bWJlcjtcbiAgY2F0ZWdvcnlfbmFtZTogc3RyaW5nO1xuICBhdXRob3JfaWQ6IG51bWJlcjtcbiAgc3RhdHVzOiBzdHJpbmc7XG4gIGlzX2ZlYXR1cmVkOiBudW1iZXI7XG4gIGNyZWF0ZWRfYXQ6IHN0cmluZztcbiAgdXBkYXRlZF9hdDogc3RyaW5nO1xufVxuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZXhlY3V0ZVF1ZXJ5PFQ+KHF1ZXJ5OiBzdHJpbmcsIHBhcmFtczogUXVlcnlQYXJhbXNbXSA9IFtdKTogUHJvbWlzZTxUPiB7XG4gIHRyeSB7XG4gICAgY29uc3QgW3Jlc3VsdHNdID0gYXdhaXQgcG9vbC5leGVjdXRlKHF1ZXJ5LCBwYXJhbXMpO1xuICAgIHJldHVybiByZXN1bHRzIGFzIFQ7XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc29sZS5lcnJvcignRGF0YWJhc2UgcXVlcnkgZXJyb3I6JywgZXJyb3IpO1xuICAgIHRocm93IGVycm9yO1xuICB9XG59XG5cbi8vIEhlbHBlciBmdW5jdGlvbiB0byBnZXQgYSBzaW5nbGUgbmV3cyBhcnRpY2xlIGJ5IHNsdWdcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBnZXROZXdzQnlTbHVnKHNsdWc6IHN0cmluZykge1xuICBjb25zdCBxdWVyeSA9IGBcbiAgICBTRUxFQ1Qgbi4qLCBjLm5hbWUgYXMgY2F0ZWdvcnlfbmFtZSBcbiAgICBGUk9NIG5ld3MgblxuICAgIEpPSU4gY2F0ZWdvcmllcyBjIE9OIG4uY2F0ZWdvcnlfaWQgPSBjLmlkXG4gICAgV0hFUkUgbi5zbHVnID0gPyBBTkQgbi5zdGF0dXMgPSAncHVibGlzaGVkJ1xuICBgO1xuICBcbiAgY29uc3QgcmVzdWx0cyA9IGF3YWl0IGV4ZWN1dGVRdWVyeTxOZXdzQXJ0aWNsZVtdPihxdWVyeSwgW3NsdWddKTtcbiAgcmV0dXJuIHJlc3VsdHMubGVuZ3RoID4gMCA/IHJlc3VsdHNbMF0gOiBudWxsO1xufVxuXG4vLyBIZWxwZXIgZnVuY3Rpb24gdG8gZ2V0IGFsbCBwdWJsaXNoZWQgbmV3cyBhcnRpY2xlc1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGdldEFsbE5ld3MobGltaXQgPSAxMCwgb2Zmc2V0ID0gMCwgY2F0ZWdvcnlJZD86IG51bWJlcikge1xuICBsZXQgcXVlcnkgPSBgXG4gICAgU0VMRUNUIG4uKiwgYy5uYW1lIGFzIGNhdGVnb3J5X25hbWUgXG4gICAgRlJPTSBuZXdzIG5cbiAgICBKT0lOIGNhdGVnb3JpZXMgYyBPTiBuLmNhdGVnb3J5X2lkID0gYy5pZFxuICAgIFdIRVJFIG4uc3RhdHVzID0gJ3B1Ymxpc2hlZCdcbiAgYDtcbiAgXG4gIGNvbnN0IHBhcmFtczogUXVlcnlQYXJhbXNbXSA9IFtdO1xuICBcbiAgaWYgKGNhdGVnb3J5SWQpIHtcbiAgICBxdWVyeSArPSAnIEFORCBuLmNhdGVnb3J5X2lkID0gPyc7XG4gICAgcGFyYW1zLnB1c2goY2F0ZWdvcnlJZCk7XG4gIH1cbiAgXG4gIHF1ZXJ5ICs9ICcgT1JERVIgQlkgbi5jcmVhdGVkX2F0IERFU0MgTElNSVQgPyBPRkZTRVQgPyc7XG4gIHBhcmFtcy5wdXNoKGxpbWl0LCBvZmZzZXQpO1xuICBcbiAgcmV0dXJuIGV4ZWN1dGVRdWVyeTxOZXdzQXJ0aWNsZVtdPihxdWVyeSwgcGFyYW1zKTtcbn1cblxuLy8gSGVscGVyIGZ1bmN0aW9uIHRvIGdldCBmZWF0dXJlZCBuZXdzIGFydGljbGVzXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0RmVhdHVyZWROZXdzKGxpbWl0ID0gNSkge1xuICBjb25zdCBxdWVyeSA9IGBcbiAgICBTRUxFQ1Qgbi4qLCBjLm5hbWUgYXMgY2F0ZWdvcnlfbmFtZSBcbiAgICBGUk9NIG5ld3MgblxuICAgIEpPSU4gY2F0ZWdvcmllcyBjIE9OIG4uY2F0ZWdvcnlfaWQgPSBjLmlkXG4gICAgV0hFUkUgbi5zdGF0dXMgPSAncHVibGlzaGVkJyBBTkQgbi5pc19mZWF0dXJlZCA9IDFcbiAgICBPUkRFUiBCWSBuLmNyZWF0ZWRfYXQgREVTQ1xuICAgIExJTUlUID9cbiAgYDtcbiAgXG4gIHJldHVybiBleGVjdXRlUXVlcnk8TmV3c0FydGljbGVbXT4ocXVlcnksIFtsaW1pdF0pO1xufVxuXG4vLyBIZWxwZXIgZnVuY3Rpb24gdG8gZ2V0IGFsbCBjYXRlZ29yaWVzXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0QWxsQ2F0ZWdvcmllcygpIHtcbiAgY29uc3QgcXVlcnkgPSBgXG4gICAgU0VMRUNUIGMuKiwgQ09VTlQobi5pZCkgYXMgbmV3c19jb3VudFxuICAgIEZST00gY2F0ZWdvcmllcyBjXG4gICAgTEVGVCBKT0lOIG5ld3MgbiBPTiBjLmlkID0gbi5jYXRlZ29yeV9pZCBBTkQgbi5zdGF0dXMgPSAncHVibGlzaGVkJ1xuICAgIEdST1VQIEJZIGMuaWRcbiAgICBPUkRFUiBCWSBjLm5hbWVcbiAgYDtcbiAgXG4gIGludGVyZmFjZSBDYXRlZ29yeSB7XG4gICAgaWQ6IG51bWJlcjtcbiAgICBuYW1lOiBzdHJpbmc7XG4gICAgc2x1Zzogc3RyaW5nO1xuICAgIGRlc2NyaXB0aW9uOiBzdHJpbmc7XG4gICAgbmV3c19jb3VudDogbnVtYmVyO1xuICB9XG5cbiAgcmV0dXJuIGV4ZWN1dGVRdWVyeTxDYXRlZ29yeVtdPihxdWVyeSwgW10pO1xufVxuXG4vLyBIZWxwZXIgZnVuY3Rpb24gdG8gY3JlYXRlIGEgbmV3IG5ld3MgYXJ0aWNsZVxuaW50ZXJmYWNlIE5ld3NEYXRhIHtcbiAgdGl0bGU6IHN0cmluZztcbiAgc2x1Zzogc3RyaW5nO1xuICBjb250ZW50OiBzdHJpbmc7XG4gIGV4Y2VycHQ6IHN0cmluZztcbiAgaW1hZ2VVcmw6IHN0cmluZztcbiAgY2F0ZWdvcnlJZDogbnVtYmVyO1xuICBhdXRob3JJZDogbnVtYmVyO1xuICBzdGF0dXM6IHN0cmluZztcbiAgaXNGZWF0dXJlZDogYm9vbGVhbjtcbn1cblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGNyZWF0ZU5ld3MobmV3c0RhdGE6IE5ld3NEYXRhKSB7XG4gIGNvbnN0IHF1ZXJ5ID0gYFxuICAgIElOU0VSVCBJTlRPIG5ld3MgKFxuICAgICAgdGl0bGUsIHNsdWcsIGNvbnRlbnQsIGV4Y2VycHQsIGltYWdlX3VybCwgXG4gICAgICBjYXRlZ29yeV9pZCwgYXV0aG9yX2lkLCBzdGF0dXMsIGlzX2ZlYXR1cmVkLCBcbiAgICAgIGNyZWF0ZWRfYXQsIHVwZGF0ZWRfYXRcbiAgICApIFZBTFVFUyAoPywgPywgPywgPywgPywgPywgPywgPywgPywgTk9XKCksIE5PVygpKVxuICBgO1xuICBcbiAgY29uc3QgcGFyYW1zID0gW1xuICAgIG5ld3NEYXRhLnRpdGxlLFxuICAgIG5ld3NEYXRhLnNsdWcsXG4gICAgbmV3c0RhdGEuY29udGVudCxcbiAgICBuZXdzRGF0YS5leGNlcnB0LFxuICAgIG5ld3NEYXRhLmltYWdlVXJsLFxuICAgIG5ld3NEYXRhLmNhdGVnb3J5SWQsXG4gICAgbmV3c0RhdGEuYXV0aG9ySWQsXG4gICAgbmV3c0RhdGEuc3RhdHVzLFxuICAgIG5ld3NEYXRhLmlzRmVhdHVyZWQgPyAxIDogMFxuICBdO1xuICBcbiAgaW50ZXJmYWNlIEluc2VydFJlc3VsdCB7XG4gICAgaW5zZXJ0SWQ6IG51bWJlcjtcbiAgICBhZmZlY3RlZFJvd3M6IG51bWJlcjtcbiAgfVxuXG4gIGNvbnN0IHJlc3VsdCA9IGF3YWl0IGV4ZWN1dGVRdWVyeTxJbnNlcnRSZXN1bHQ+KHF1ZXJ5LCBwYXJhbXMpO1xuICByZXR1cm4gcmVzdWx0Lmluc2VydElkO1xufVxuXG4vLyBIZWxwZXIgZnVuY3Rpb24gdG8gdXBkYXRlIGFuIGV4aXN0aW5nIG5ld3MgYXJ0aWNsZVxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHVwZGF0ZU5ld3MoaWQ6IG51bWJlciwgbmV3c0RhdGE6IE5ld3NEYXRhKSB7XG4gIGNvbnN0IHF1ZXJ5ID0gYFxuICAgIFVQREFURSBuZXdzIFNFVFxuICAgICAgdGl0bGUgPSA/LFxuICAgICAgc2x1ZyA9ID8sXG4gICAgICBjb250ZW50ID0gPyxcbiAgICAgIGV4Y2VycHQgPSA/LFxuICAgICAgaW1hZ2VfdXJsID0gPyxcbiAgICAgIGNhdGVnb3J5X2lkID0gPyxcbiAgICAgIHN0YXR1cyA9ID8sXG4gICAgICBpc19mZWF0dXJlZCA9ID8sXG4gICAgICB1cGRhdGVkX2F0ID0gTk9XKClcbiAgICBXSEVSRSBpZCA9ID9cbiAgYDtcbiAgXG4gIGNvbnN0IHBhcmFtcyA9IFtcbiAgICBuZXdzRGF0YS50aXRsZSxcbiAgICBuZXdzRGF0YS5zbHVnLFxuICAgIG5ld3NEYXRhLmNvbnRlbnQsXG4gICAgbmV3c0RhdGEuZXhjZXJwdCxcbiAgICBuZXdzRGF0YS5pbWFnZVVybCxcbiAgICBuZXdzRGF0YS5jYXRlZ29yeUlkLFxuICAgIG5ld3NEYXRhLnN0YXR1cyxcbiAgICBuZXdzRGF0YS5pc0ZlYXR1cmVkID8gMSA6IDAsXG4gICAgaWRcbiAgXTtcbiAgXG4gIGludGVyZmFjZSBVcGRhdGVSZXN1bHQge1xuICAgIGFmZmVjdGVkUm93czogbnVtYmVyO1xuICAgIGNoYW5nZWRSb3dzOiBudW1iZXI7XG4gIH1cblxuICByZXR1cm4gZXhlY3V0ZVF1ZXJ5PFVwZGF0ZVJlc3VsdD4ocXVlcnksIHBhcmFtcyk7XG59XG5cbi8vIEhlbHBlciBmdW5jdGlvbiB0byBkZWxldGUgYSBuZXdzIGFydGljbGVcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBkZWxldGVOZXdzKGlkOiBudW1iZXIpIHtcbiAgY29uc3QgcXVlcnkgPSAnREVMRVRFIEZST00gbmV3cyBXSEVSRSBpZCA9ID8nO1xuICBpbnRlcmZhY2UgRGVsZXRlUmVzdWx0IHtcbiAgICBhZmZlY3RlZFJvd3M6IG51bWJlcjtcbiAgfVxuXG4gIHJldHVybiBleGVjdXRlUXVlcnk8RGVsZXRlUmVzdWx0PihxdWVyeSwgW2lkXSk7XG59XG4iXSwibmFtZXMiOlsibXlzcWwiLCJkYkNvbmZpZyIsImhvc3QiLCJwcm9jZXNzIiwiZW52IiwiREJfSE9TVCIsInVzZXIiLCJEQl9VU0VSIiwicGFzc3dvcmQiLCJEQl9QQVNTV09SRCIsImRhdGFiYXNlIiwiREJfTkFNRSIsInBvb2wiLCJjcmVhdGVQb29sIiwiZXhlY3V0ZVF1ZXJ5IiwicXVlcnkiLCJwYXJhbXMiLCJyZXN1bHRzIiwiZXhlY3V0ZSIsImVycm9yIiwiY29uc29sZSIsImdldE5ld3NCeVNsdWciLCJzbHVnIiwibGVuZ3RoIiwiZ2V0QWxsTmV3cyIsImxpbWl0Iiwib2Zmc2V0IiwiY2F0ZWdvcnlJZCIsInB1c2giLCJnZXRGZWF0dXJlZE5ld3MiLCJnZXRBbGxDYXRlZ29yaWVzIiwiY3JlYXRlTmV3cyIsIm5ld3NEYXRhIiwidGl0bGUiLCJjb250ZW50IiwiZXhjZXJwdCIsImltYWdlVXJsIiwiYXV0aG9ySWQiLCJzdGF0dXMiLCJpc0ZlYXR1cmVkIiwicmVzdWx0IiwiaW5zZXJ0SWQiLCJ1cGRhdGVOZXdzIiwiaWQiLCJkZWxldGVOZXdzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(api)/./utils/db.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fnews&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Cnews%5Cindex.ts&middlewareConfigBase64=e30%3D!")));
module.exports = __webpack_exports__;

})();