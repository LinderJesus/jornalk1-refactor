"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/news/slug/[slug]";
exports.ids = ["pages/api/news/slug/[slug]"];
exports.modules = {

/***/ "mysql2/promise":
/*!*********************************!*\
  !*** external "mysql2/promise" ***!
  \*********************************/
/***/ ((module) => {

module.exports = require("mysql2/promise");

/***/ }),

/***/ "next/dist/compiled/next-server/pages-api.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/pages-api.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/pages-api.runtime.dev.js");

/***/ }),

/***/ "(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fnews%2Fslug%2F%5Bslug%5D&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Cnews%5Cslug%5C%5Bslug%5D.ts&middlewareConfigBase64=e30%3D!":
/*!******************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fnews%2Fslug%2F%5Bslug%5D&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Cnews%5Cslug%5C%5Bslug%5D.ts&middlewareConfigBase64=e30%3D! ***!
  \******************************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   routeModule: () => (/* binding */ routeModule)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/pages-api/module.compiled */ \"(api)/./node_modules/next/dist/server/future/route-modules/pages-api/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(api)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/build/templates/helpers */ \"(api)/./node_modules/next/dist/build/templates/helpers.js\");\n/* harmony import */ var _pages_api_news_slug_slug_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./pages\\api\\news\\slug\\[slug].ts */ \"(api)/./pages/api/news/slug/[slug].ts\");\n\n\n\n// Import the userland code.\n\n// Re-export the handler (should be the default export).\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_news_slug_slug_ts__WEBPACK_IMPORTED_MODULE_3__, \"default\"));\n// Re-export config.\nconst config = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_news_slug_slug_ts__WEBPACK_IMPORTED_MODULE_3__, \"config\");\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__.PagesAPIRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.PAGES_API,\n        page: \"/api/news/slug/[slug]\",\n        pathname: \"/api/news/slug/[slug]\",\n        // The following aren't used in production.\n        bundlePath: \"\",\n        filename: \"\"\n    },\n    userland: _pages_api_news_slug_slug_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n\n//# sourceMappingURL=pages-api.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LXJvdXRlLWxvYWRlci9pbmRleC5qcz9raW5kPVBBR0VTX0FQSSZwYWdlPSUyRmFwaSUyRm5ld3MlMkZzbHVnJTJGJTVCc2x1ZyU1RCZwcmVmZXJyZWRSZWdpb249JmFic29sdXRlUGFnZVBhdGg9LiUyRnBhZ2VzJTVDYXBpJTVDbmV3cyU1Q3NsdWclNUMlNUJzbHVnJTVELnRzJm1pZGRsZXdhcmVDb25maWdCYXNlNjQ9ZTMwJTNEISIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUFzRztBQUN2QztBQUNMO0FBQzFEO0FBQ2dFO0FBQ2hFO0FBQ0EsaUVBQWUsd0VBQUssQ0FBQyx5REFBUSxZQUFZLEVBQUM7QUFDMUM7QUFDTyxlQUFlLHdFQUFLLENBQUMseURBQVE7QUFDcEM7QUFDTyx3QkFBd0IsZ0hBQW1CO0FBQ2xEO0FBQ0EsY0FBYyx5RUFBUztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLFlBQVk7QUFDWixDQUFDOztBQUVEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vam9ybmFsazEvPzU4MTMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUGFnZXNBUElSb3V0ZU1vZHVsZSB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1tb2R1bGVzL3BhZ2VzLWFwaS9tb2R1bGUuY29tcGlsZWRcIjtcbmltcG9ydCB7IFJvdXRlS2luZCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1raW5kXCI7XG5pbXBvcnQgeyBob2lzdCB9IGZyb20gXCJuZXh0L2Rpc3QvYnVpbGQvdGVtcGxhdGVzL2hlbHBlcnNcIjtcbi8vIEltcG9ydCB0aGUgdXNlcmxhbmQgY29kZS5cbmltcG9ydCAqIGFzIHVzZXJsYW5kIGZyb20gXCIuL3BhZ2VzXFxcXGFwaVxcXFxuZXdzXFxcXHNsdWdcXFxcW3NsdWddLnRzXCI7XG4vLyBSZS1leHBvcnQgdGhlIGhhbmRsZXIgKHNob3VsZCBiZSB0aGUgZGVmYXVsdCBleHBvcnQpLlxuZXhwb3J0IGRlZmF1bHQgaG9pc3QodXNlcmxhbmQsIFwiZGVmYXVsdFwiKTtcbi8vIFJlLWV4cG9ydCBjb25maWcuXG5leHBvcnQgY29uc3QgY29uZmlnID0gaG9pc3QodXNlcmxhbmQsIFwiY29uZmlnXCIpO1xuLy8gQ3JlYXRlIGFuZCBleHBvcnQgdGhlIHJvdXRlIG1vZHVsZSB0aGF0IHdpbGwgYmUgY29uc3VtZWQuXG5leHBvcnQgY29uc3Qgcm91dGVNb2R1bGUgPSBuZXcgUGFnZXNBUElSb3V0ZU1vZHVsZSh7XG4gICAgZGVmaW5pdGlvbjoge1xuICAgICAgICBraW5kOiBSb3V0ZUtpbmQuUEFHRVNfQVBJLFxuICAgICAgICBwYWdlOiBcIi9hcGkvbmV3cy9zbHVnL1tzbHVnXVwiLFxuICAgICAgICBwYXRobmFtZTogXCIvYXBpL25ld3Mvc2x1Zy9bc2x1Z11cIixcbiAgICAgICAgLy8gVGhlIGZvbGxvd2luZyBhcmVuJ3QgdXNlZCBpbiBwcm9kdWN0aW9uLlxuICAgICAgICBidW5kbGVQYXRoOiBcIlwiLFxuICAgICAgICBmaWxlbmFtZTogXCJcIlxuICAgIH0sXG4gICAgdXNlcmxhbmRcbn0pO1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1wYWdlcy1hcGkuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fnews%2Fslug%2F%5Bslug%5D&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Cnews%5Cslug%5C%5Bslug%5D.ts&middlewareConfigBase64=e30%3D!\n");

/***/ }),

/***/ "(api)/./pages/api/news/slug/[slug].ts":
/*!***************************************!*\
  !*** ./pages/api/news/slug/[slug].ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var _utils_db_service__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../utils/db-service */ \"(api)/./utils/db-service.ts\");\n\n/**\n * Manipulador de API para buscar notícia por slug\n * GET: Obtém detalhes de uma notícia por slug\n */ async function handler(req, res) {\n    try {\n        // Apenas permitir método GET\n        if (req.method !== \"GET\") {\n            return res.status(405).json({\n                success: false,\n                message: \"M\\xe9todo n\\xe3o permitido\"\n            });\n        }\n        // Obter o slug da notícia da rota\n        const { slug } = req.query;\n        if (!slug || Array.isArray(slug)) {\n            return res.status(400).json({\n                success: false,\n                message: \"Slug de not\\xedcia inv\\xe1lido\"\n            });\n        }\n        // Buscar notícia pelo slug\n        const news = await _utils_db_service__WEBPACK_IMPORTED_MODULE_0__.dbService.getNewsBySlug(slug);\n        if (!news) {\n            return res.status(404).json({\n                success: false,\n                message: \"Not\\xedcia n\\xe3o encontrada\"\n            });\n        }\n        // Buscar notícias relacionadas (mesma categoria)\n        const { news: relatedNews } = await _utils_db_service__WEBPACK_IMPORTED_MODULE_0__.dbService.getNewsList({\n            limit: 4,\n            categoryId: news.category_id\n        });\n        // Remover a notícia atual das relacionadas\n        const filteredRelatedNews = relatedNews.filter((item)=>item.id !== news.id);\n        // Retornar dados da notícia e notícias relacionadas\n        return res.status(200).json({\n            success: true,\n            data: news,\n            relatedNews: filteredRelatedNews.slice(0, 3) // Limitar a 3 notícias relacionadas\n        });\n    } catch (error) {\n        console.error(\"Erro ao buscar not\\xedcia por slug:\", error);\n        return res.status(500).json({\n            success: false,\n            message: \"Erro ao buscar not\\xedcia\"\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9wYWdlcy9hcGkvbmV3cy9zbHVnL1tzbHVnXS50cyIsIm1hcHBpbmdzIjoiOzs7OztBQUN5RDtBQUV6RDs7O0NBR0MsR0FDYyxlQUFlQyxRQUFRQyxHQUFtQixFQUFFQyxHQUFvQjtJQUM3RSxJQUFJO1FBQ0YsNkJBQTZCO1FBQzdCLElBQUlELElBQUlFLE1BQU0sS0FBSyxPQUFPO1lBQ3hCLE9BQU9ELElBQUlFLE1BQU0sQ0FBQyxLQUFLQyxJQUFJLENBQUM7Z0JBQzFCQyxTQUFTO2dCQUNUQyxTQUFTO1lBQ1g7UUFDRjtRQUVBLGtDQUFrQztRQUNsQyxNQUFNLEVBQUVDLElBQUksRUFBRSxHQUFHUCxJQUFJUSxLQUFLO1FBRTFCLElBQUksQ0FBQ0QsUUFBUUUsTUFBTUMsT0FBTyxDQUFDSCxPQUFPO1lBQ2hDLE9BQU9OLElBQUlFLE1BQU0sQ0FBQyxLQUFLQyxJQUFJLENBQUM7Z0JBQzFCQyxTQUFTO2dCQUNUQyxTQUFTO1lBQ1g7UUFDRjtRQUVBLDJCQUEyQjtRQUMzQixNQUFNSyxPQUFPLE1BQU1iLHdEQUFTQSxDQUFDYyxhQUFhLENBQUNMO1FBRTNDLElBQUksQ0FBQ0ksTUFBTTtZQUNULE9BQU9WLElBQUlFLE1BQU0sQ0FBQyxLQUFLQyxJQUFJLENBQUM7Z0JBQzFCQyxTQUFTO2dCQUNUQyxTQUFTO1lBQ1g7UUFDRjtRQUVBLGlEQUFpRDtRQUNqRCxNQUFNLEVBQUVLLE1BQU1FLFdBQVcsRUFBRSxHQUFHLE1BQU1mLHdEQUFTQSxDQUFDZ0IsV0FBVyxDQUFDO1lBQ3hEQyxPQUFPO1lBQ1BDLFlBQVlMLEtBQUtNLFdBQVc7UUFDOUI7UUFFQSwyQ0FBMkM7UUFDM0MsTUFBTUMsc0JBQXNCTCxZQUFZTSxNQUFNLENBQUNDLENBQUFBLE9BQVFBLEtBQUtDLEVBQUUsS0FBS1YsS0FBS1UsRUFBRTtRQUUxRSxvREFBb0Q7UUFDcEQsT0FBT3BCLElBQUlFLE1BQU0sQ0FBQyxLQUFLQyxJQUFJLENBQUM7WUFDMUJDLFNBQVM7WUFDVGlCLE1BQU1YO1lBQ05FLGFBQWFLLG9CQUFvQkssS0FBSyxDQUFDLEdBQUcsR0FBRyxvQ0FBb0M7UUFDbkY7SUFFRixFQUFFLE9BQU9DLE9BQU87UUFDZEMsUUFBUUQsS0FBSyxDQUFDLHVDQUFvQ0E7UUFDbEQsT0FBT3ZCLElBQUlFLE1BQU0sQ0FBQyxLQUFLQyxJQUFJLENBQUM7WUFDMUJDLFNBQVM7WUFDVEMsU0FBUztRQUNYO0lBQ0Y7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL2pvcm5hbGsxLy4vcGFnZXMvYXBpL25ld3Mvc2x1Zy9bc2x1Z10udHM/MjRmZSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZXh0QXBpUmVxdWVzdCwgTmV4dEFwaVJlc3BvbnNlIH0gZnJvbSAnbmV4dCc7XG5pbXBvcnQgeyBkYlNlcnZpY2UgfSBmcm9tICcuLi8uLi8uLi8uLi91dGlscy9kYi1zZXJ2aWNlJztcblxuLyoqXG4gKiBNYW5pcHVsYWRvciBkZSBBUEkgcGFyYSBidXNjYXIgbm90w61jaWEgcG9yIHNsdWdcbiAqIEdFVDogT2J0w6ltIGRldGFsaGVzIGRlIHVtYSBub3TDrWNpYSBwb3Igc2x1Z1xuICovXG5leHBvcnQgZGVmYXVsdCBhc3luYyBmdW5jdGlvbiBoYW5kbGVyKHJlcTogTmV4dEFwaVJlcXVlc3QsIHJlczogTmV4dEFwaVJlc3BvbnNlKSB7XG4gIHRyeSB7XG4gICAgLy8gQXBlbmFzIHBlcm1pdGlyIG3DqXRvZG8gR0VUXG4gICAgaWYgKHJlcS5tZXRob2QgIT09ICdHRVQnKSB7XG4gICAgICByZXR1cm4gcmVzLnN0YXR1cyg0MDUpLmpzb24oe1xuICAgICAgICBzdWNjZXNzOiBmYWxzZSxcbiAgICAgICAgbWVzc2FnZTogJ03DqXRvZG8gbsOjbyBwZXJtaXRpZG8nXG4gICAgICB9KTtcbiAgICB9XG5cbiAgICAvLyBPYnRlciBvIHNsdWcgZGEgbm90w61jaWEgZGEgcm90YVxuICAgIGNvbnN0IHsgc2x1ZyB9ID0gcmVxLnF1ZXJ5O1xuICAgIFxuICAgIGlmICghc2x1ZyB8fCBBcnJheS5pc0FycmF5KHNsdWcpKSB7XG4gICAgICByZXR1cm4gcmVzLnN0YXR1cyg0MDApLmpzb24oe1xuICAgICAgICBzdWNjZXNzOiBmYWxzZSxcbiAgICAgICAgbWVzc2FnZTogJ1NsdWcgZGUgbm90w61jaWEgaW52w6FsaWRvJ1xuICAgICAgfSk7XG4gICAgfVxuICAgIFxuICAgIC8vIEJ1c2NhciBub3TDrWNpYSBwZWxvIHNsdWdcbiAgICBjb25zdCBuZXdzID0gYXdhaXQgZGJTZXJ2aWNlLmdldE5ld3NCeVNsdWcoc2x1Zyk7XG4gICAgXG4gICAgaWYgKCFuZXdzKSB7XG4gICAgICByZXR1cm4gcmVzLnN0YXR1cyg0MDQpLmpzb24oe1xuICAgICAgICBzdWNjZXNzOiBmYWxzZSxcbiAgICAgICAgbWVzc2FnZTogJ05vdMOtY2lhIG7Do28gZW5jb250cmFkYSdcbiAgICAgIH0pO1xuICAgIH1cbiAgICBcbiAgICAvLyBCdXNjYXIgbm90w61jaWFzIHJlbGFjaW9uYWRhcyAobWVzbWEgY2F0ZWdvcmlhKVxuICAgIGNvbnN0IHsgbmV3czogcmVsYXRlZE5ld3MgfSA9IGF3YWl0IGRiU2VydmljZS5nZXROZXdzTGlzdCh7XG4gICAgICBsaW1pdDogNCxcbiAgICAgIGNhdGVnb3J5SWQ6IG5ld3MuY2F0ZWdvcnlfaWQsXG4gICAgfSk7XG4gICAgXG4gICAgLy8gUmVtb3ZlciBhIG5vdMOtY2lhIGF0dWFsIGRhcyByZWxhY2lvbmFkYXNcbiAgICBjb25zdCBmaWx0ZXJlZFJlbGF0ZWROZXdzID0gcmVsYXRlZE5ld3MuZmlsdGVyKGl0ZW0gPT4gaXRlbS5pZCAhPT0gbmV3cy5pZCk7XG4gICAgXG4gICAgLy8gUmV0b3JuYXIgZGFkb3MgZGEgbm90w61jaWEgZSBub3TDrWNpYXMgcmVsYWNpb25hZGFzXG4gICAgcmV0dXJuIHJlcy5zdGF0dXMoMjAwKS5qc29uKHtcbiAgICAgIHN1Y2Nlc3M6IHRydWUsXG4gICAgICBkYXRhOiBuZXdzLFxuICAgICAgcmVsYXRlZE5ld3M6IGZpbHRlcmVkUmVsYXRlZE5ld3Muc2xpY2UoMCwgMykgLy8gTGltaXRhciBhIDMgbm90w61jaWFzIHJlbGFjaW9uYWRhc1xuICAgIH0pO1xuICAgIFxuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGNvbnNvbGUuZXJyb3IoJ0Vycm8gYW8gYnVzY2FyIG5vdMOtY2lhIHBvciBzbHVnOicsIGVycm9yKTtcbiAgICByZXR1cm4gcmVzLnN0YXR1cyg1MDApLmpzb24oe1xuICAgICAgc3VjY2VzczogZmFsc2UsXG4gICAgICBtZXNzYWdlOiAnRXJybyBhbyBidXNjYXIgbm90w61jaWEnXG4gICAgfSk7XG4gIH1cbn1cbiJdLCJuYW1lcyI6WyJkYlNlcnZpY2UiLCJoYW5kbGVyIiwicmVxIiwicmVzIiwibWV0aG9kIiwic3RhdHVzIiwianNvbiIsInN1Y2Nlc3MiLCJtZXNzYWdlIiwic2x1ZyIsInF1ZXJ5IiwiQXJyYXkiLCJpc0FycmF5IiwibmV3cyIsImdldE5ld3NCeVNsdWciLCJyZWxhdGVkTmV3cyIsImdldE5ld3NMaXN0IiwibGltaXQiLCJjYXRlZ29yeUlkIiwiY2F0ZWdvcnlfaWQiLCJmaWx0ZXJlZFJlbGF0ZWROZXdzIiwiZmlsdGVyIiwiaXRlbSIsImlkIiwiZGF0YSIsInNsaWNlIiwiZXJyb3IiLCJjb25zb2xlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(api)/./pages/api/news/slug/[slug].ts\n");

/***/ }),

/***/ "(api)/./utils/db-service.ts":
/*!*****************************!*\
  !*** ./utils/db-service.ts ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   dbService: () => (/* binding */ dbService)\n/* harmony export */ });\n/* harmony import */ var _db__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./db */ \"(api)/./utils/db.ts\");\n\n/**\n * Serviço para manipulação de dados do banco\n * Implementa cache e tratamento de erros\n */ class DatabaseService {\n    /**\n   * Verifica se o cache é válido\n   */ isCacheValid(cacheKey) {\n        if (!this.cache[cacheKey]) return false;\n        const now = Date.now();\n        return now - this.cache[cacheKey].timestamp < this.CACHE_TTL;\n    }\n    /**\n   * Obtém notícia por slug com cache\n   */ async getNewsBySlug(slug) {\n        const cacheKey = `news_${slug}`;\n        if (this.isCacheValid(cacheKey)) {\n            return this.cache[cacheKey].data;\n        }\n        try {\n            const result = await (0,_db__WEBPACK_IMPORTED_MODULE_0__.executeQuery)(`SELECT n.*, c.name as category_name, u.name as author_name\n         FROM news n\n         JOIN categories c ON n.category_id = c.id\n         JOIN users u ON n.author_id = u.id\n         WHERE n.slug = ? AND n.status = 'published'`, [\n                slug\n            ]);\n            const news = result.length > 0 ? result[0] : null;\n            // Atualiza o cache\n            this.cache[cacheKey] = {\n                data: news,\n                timestamp: Date.now()\n            };\n            // Incrementa visualizações\n            if (news) {\n                await this.incrementViewCount(news.id);\n            }\n            return news;\n        } catch (error) {\n            console.error(`Erro ao buscar notícia com slug ${slug}:`, error);\n            return null;\n        }\n    }\n    /**\n   * Incrementa contador de visualizações de uma notícia\n   */ async incrementViewCount(newsId) {\n        try {\n            await (0,_db__WEBPACK_IMPORTED_MODULE_0__.executeQuery)(\"UPDATE news SET view_count = view_count + 1 WHERE id = ?\", [\n                newsId\n            ]);\n        } catch (error) {\n            console.error(`Erro ao incrementar visualizações para notícia ${newsId}:`, error);\n        }\n    }\n    /**\n   * Obtém lista de notícias com filtros\n   */ async getNewsList(options) {\n        const { limit = 10, offset = 0, categoryId, featured = false, searchQuery } = options;\n        const cacheKey = `news_list_${limit}_${offset}_${categoryId}_${featured}_${searchQuery}`;\n        if (this.isCacheValid(cacheKey)) {\n            return this.cache[cacheKey].data;\n        }\n        try {\n            // Construção da query base\n            let query = `\n        SELECT n.*, c.name as category_name, u.name as author_name\n        FROM news n\n        JOIN categories c ON n.category_id = c.id\n        JOIN users u ON n.author_id = u.id\n        WHERE n.status = 'published'\n      `;\n            // Construção da query para total\n            let countQuery = `\n        SELECT COUNT(*) as total\n        FROM news n\n        WHERE n.status = 'published'\n      `;\n            const params = [];\n            const countParams = [];\n            // Adiciona filtro de categoria\n            if (categoryId !== undefined && categoryId !== null) {\n                query += \" AND n.category_id = ?\";\n                countQuery += \" AND n.category_id = ?\";\n                params.push(categoryId);\n                countParams.push(categoryId);\n            }\n            // Adiciona filtro de featured\n            if (featured) {\n                query += \" AND n.is_featured = 1\";\n                countQuery += \" AND n.is_featured = 1\";\n            }\n            // Adiciona filtro de busca\n            if (searchQuery) {\n                query += \" AND (n.title LIKE ? OR n.content LIKE ? OR n.excerpt LIKE ?)\";\n                countQuery += \" AND (n.title LIKE ? OR n.content LIKE ? OR n.excerpt LIKE ?)\";\n                const searchParam = `%${searchQuery}%`;\n                params.push(searchParam, searchParam, searchParam);\n                countParams.push(searchParam, searchParam, searchParam);\n            }\n            // Finaliza queries\n            query += \" ORDER BY n.created_at DESC LIMIT ? OFFSET ?\";\n            params.push(limit, offset);\n            // Executa queries\n            const news = await (0,_db__WEBPACK_IMPORTED_MODULE_0__.executeQuery)(query, params);\n            const totalResult = await (0,_db__WEBPACK_IMPORTED_MODULE_0__.executeQuery)(countQuery, countParams);\n            const total = totalResult[0]?.total || 0;\n            const result = {\n                news,\n                total\n            };\n            // Atualiza cache\n            this.cache[cacheKey] = {\n                data: result,\n                timestamp: Date.now()\n            };\n            return result;\n        } catch (error) {\n            console.error(\"Erro ao buscar lista de not\\xedcias:\", error);\n            return {\n                news: [],\n                total: 0\n            };\n        }\n    }\n    /**\n   * Obtém categorias com contagem de notícias\n   */ async getCategories() {\n        const cacheKey = \"categories\";\n        if (this.isCacheValid(cacheKey)) {\n            return this.cache[cacheKey].data;\n        }\n        try {\n            const categories = await (0,_db__WEBPACK_IMPORTED_MODULE_0__.executeQuery)(`\n        SELECT c.*, COUNT(n.id) as news_count\n        FROM categories c\n        LEFT JOIN news n ON c.id = n.category_id AND n.status = 'published'\n        GROUP BY c.id\n        ORDER BY c.name\n      `);\n            this.cache[cacheKey] = {\n                data: categories,\n                timestamp: Date.now()\n            };\n            return categories;\n        } catch (error) {\n            console.error(\"Erro ao buscar categorias:\", error);\n            return [];\n        }\n    }\n    /**\n   * Limpa o cache quando há modificações no banco\n   */ clearCache() {\n        this.cache = {};\n    }\n    /**\n   * Cria uma nova notícia\n   */ async createNews(newsData) {\n        try {\n            const result = await (0,_db__WEBPACK_IMPORTED_MODULE_0__.executeQuery)(`INSERT INTO news (\n          title, slug, content, excerpt, image_url, \n          category_id, author_id, status, is_featured,\n          created_at, updated_at\n        ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, NOW(), NOW())`, [\n                newsData.title,\n                newsData.slug,\n                newsData.content,\n                newsData.excerpt,\n                newsData.imageUrl,\n                newsData.categoryId,\n                newsData.authorId,\n                newsData.status,\n                newsData.isFeatured ? 1 : 0\n            ]);\n            this.clearCache();\n            return result.insertId;\n        } catch (error) {\n            console.error(\"Erro ao criar not\\xedcia:\", error);\n            throw error;\n        }\n    }\n    /**\n   * Atualiza uma notícia existente\n   */ async updateNews(id, newsData) {\n        try {\n            const result = await (0,_db__WEBPACK_IMPORTED_MODULE_0__.executeQuery)(`UPDATE news SET\n          title = ?,\n          slug = ?,\n          content = ?,\n          excerpt = ?,\n          image_url = ?,\n          category_id = ?,\n          status = ?,\n          is_featured = ?,\n          updated_at = NOW()\n        WHERE id = ?`, [\n                newsData.title,\n                newsData.slug,\n                newsData.content,\n                newsData.excerpt,\n                newsData.imageUrl,\n                newsData.categoryId,\n                newsData.status,\n                newsData.isFeatured ? 1 : 0,\n                id\n            ]);\n            this.clearCache();\n            return result.affectedRows > 0;\n        } catch (error) {\n            console.error(`Erro ao atualizar notícia ${id}:`, error);\n            throw error;\n        }\n    }\n    /**\n   * Exclui uma notícia\n   */ async deleteNews(id) {\n        try {\n            const result = await (0,_db__WEBPACK_IMPORTED_MODULE_0__.executeQuery)(\"DELETE FROM news WHERE id = ?\", [\n                id\n            ]);\n            this.clearCache();\n            return result.affectedRows > 0;\n        } catch (error) {\n            console.error(`Erro ao excluir notícia ${id}:`, error);\n            throw error;\n        }\n    }\n    constructor(){\n        this.cache = {};\n        this.CACHE_TTL = 1000 * 60 * 5 // 5 minutos\n        ;\n    }\n}\n// Exporta uma instância única do serviço\nconst dbService = new DatabaseService();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./utils/db-service.ts\n");

/***/ }),

/***/ "(api)/./utils/db.ts":
/*!*********************!*\
  !*** ./utils/db.ts ***!
  \*********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createNews: () => (/* binding */ createNews),\n/* harmony export */   deleteNews: () => (/* binding */ deleteNews),\n/* harmony export */   executeQuery: () => (/* binding */ executeQuery),\n/* harmony export */   getAllCategories: () => (/* binding */ getAllCategories),\n/* harmony export */   getAllNews: () => (/* binding */ getAllNews),\n/* harmony export */   getFeaturedNews: () => (/* binding */ getFeaturedNews),\n/* harmony export */   getNewsBySlug: () => (/* binding */ getNewsBySlug),\n/* harmony export */   updateNews: () => (/* binding */ updateNews)\n/* harmony export */ });\n/* harmony import */ var mysql2_promise__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mysql2/promise */ \"mysql2/promise\");\n/* harmony import */ var mysql2_promise__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(mysql2_promise__WEBPACK_IMPORTED_MODULE_0__);\n\n// Database connection configuration\nconst dbConfig = {\n    host: process.env.DB_HOST || \"localhost\",\n    user: process.env.DB_USER || \"root\",\n    password: process.env.DB_PASSWORD || \"\",\n    database: process.env.DB_NAME || \"jornalk1\"\n};\n// Create a connection pool\nconst pool = mysql2_promise__WEBPACK_IMPORTED_MODULE_0___default().createPool(dbConfig);\nasync function executeQuery(query, params = []) {\n    try {\n        const [results] = await pool.execute(query, params);\n        return results;\n    } catch (error) {\n        console.error(\"Database query error:\", error);\n        throw error;\n    }\n}\n// Helper function to get a single news article by slug\nasync function getNewsBySlug(slug) {\n    const query = `\n    SELECT n.*, c.name as category_name \n    FROM news n\n    JOIN categories c ON n.category_id = c.id\n    WHERE n.slug = ? AND n.status = 'published'\n  `;\n    const results = await executeQuery(query, [\n        slug\n    ]);\n    return results.length > 0 ? results[0] : null;\n}\n// Helper function to get all published news articles\nasync function getAllNews(limit = 10, offset = 0, categoryId) {\n    let query = `\n    SELECT n.*, c.name as category_name \n    FROM news n\n    JOIN categories c ON n.category_id = c.id\n    WHERE n.status = 'published'\n  `;\n    const params = [];\n    if (categoryId) {\n        query += \" AND n.category_id = ?\";\n        params.push(categoryId);\n    }\n    query += \" ORDER BY n.created_at DESC LIMIT ? OFFSET ?\";\n    params.push(limit, offset);\n    return executeQuery(query, params);\n}\n// Helper function to get featured news articles\nasync function getFeaturedNews(limit = 5) {\n    const query = `\n    SELECT n.*, c.name as category_name \n    FROM news n\n    JOIN categories c ON n.category_id = c.id\n    WHERE n.status = 'published' AND n.is_featured = 1\n    ORDER BY n.created_at DESC\n    LIMIT ?\n  `;\n    return executeQuery(query, [\n        limit\n    ]);\n}\n// Helper function to get all categories\nasync function getAllCategories() {\n    const query = `\n    SELECT c.*, COUNT(n.id) as news_count\n    FROM categories c\n    LEFT JOIN news n ON c.id = n.category_id AND n.status = 'published'\n    GROUP BY c.id\n    ORDER BY c.name\n  `;\n    return executeQuery(query, []);\n}\nasync function createNews(newsData) {\n    const query = `\n    INSERT INTO news (\n      title, slug, content, excerpt, image_url, \n      category_id, author_id, status, is_featured, \n      created_at, updated_at\n    ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, NOW(), NOW())\n  `;\n    const params = [\n        newsData.title,\n        newsData.slug,\n        newsData.content,\n        newsData.excerpt,\n        newsData.imageUrl,\n        newsData.categoryId,\n        newsData.authorId,\n        newsData.status,\n        newsData.isFeatured ? 1 : 0\n    ];\n    const result = await executeQuery(query, params);\n    return result.insertId;\n}\n// Helper function to update an existing news article\nasync function updateNews(id, newsData) {\n    const query = `\n    UPDATE news SET\n      title = ?,\n      slug = ?,\n      content = ?,\n      excerpt = ?,\n      image_url = ?,\n      category_id = ?,\n      status = ?,\n      is_featured = ?,\n      updated_at = NOW()\n    WHERE id = ?\n  `;\n    const params = [\n        newsData.title,\n        newsData.slug,\n        newsData.content,\n        newsData.excerpt,\n        newsData.imageUrl,\n        newsData.categoryId,\n        newsData.status,\n        newsData.isFeatured ? 1 : 0,\n        id\n    ];\n    return executeQuery(query, params);\n}\n// Helper function to delete a news article\nasync function deleteNews(id) {\n    const query = \"DELETE FROM news WHERE id = ?\";\n    return executeQuery(query, [\n        id\n    ]);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./utils/db.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fnews%2Fslug%2F%5Bslug%5D&preferredRegion=&absolutePagePath=.%2Fpages%5Capi%5Cnews%5Cslug%5C%5Bslug%5D.ts&middlewareConfigBase64=e30%3D!")));
module.exports = __webpack_exports__;

})();